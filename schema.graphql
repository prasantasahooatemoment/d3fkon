### This file was generated by Nexus Schema
### Do not make changes to this file directly


type address {
  city: String
  country: String
  created_at: DateTime
  displayAddress: String!
  driver(after: driverWhereUniqueInput, before: driverWhereUniqueInput, first: Int, last: Int): [driver!]!
  id: String!
  lat: Float
  lng: Float
  mobile: Float
  name: String
  pincode: Float
  region: String
  store(after: storeWhereUniqueInput, before: storeWhereUniqueInput, first: Int, last: Int): [store!]!
  street_one: String
  street_two: String
  user_addresses(after: user_addressesWhereUniqueInput, before: user_addressesWhereUniqueInput, first: Int, last: Int): [user_addresses!]!
}

input addressCreateInput {
  city: String
  country: String
  created_at: DateTime
  driver: driverCreateManyWithoutAddressInput
  id: String
  lat: Float
  lng: Float
  mobile: Float
  name: String
  order_addressToorder_drop_address_id: orderCreateManyWithoutAddress_addressToorder_drop_address_idInput
  order_addressToorder_pickup_address_id: orderCreateManyWithoutAddress_addressToorder_pickup_address_idInput
  pincode: Float
  region: String
  store: storeCreateManyWithoutAddressInput
  street_one: String
  street_two: String
  user_addresses: user_addressesCreateManyWithoutAddressInput
}

input addressCreateOneWithoutDriverInput {
  connect: addressWhereUniqueInput
  connectOrCreate: addressCreateOrConnectWithoutdriverInput
  create: addressCreateWithoutDriverInput
}

input addressCreateOneWithoutOrder_addressToorder_drop_address_idInput {
  connect: addressWhereUniqueInput
  connectOrCreate: addressCreateOrConnectWithoutorderInput
  create: addressCreateWithoutOrder_addressToorder_drop_address_idInput
}

input addressCreateOneWithoutOrder_addressToorder_pickup_address_idInput {
  connect: addressWhereUniqueInput
  connectOrCreate: addressCreateOrConnectWithoutorderInput
  create: addressCreateWithoutOrder_addressToorder_pickup_address_idInput
}

input addressCreateOneWithoutStoreInput {
  connect: addressWhereUniqueInput
  connectOrCreate: addressCreateOrConnectWithoutstoreInput
  create: addressCreateWithoutStoreInput
}

input addressCreateOneWithoutUser_addressesInput {
  connect: addressWhereUniqueInput
  connectOrCreate: addressCreateOrConnectWithoutuser_addressesInput
  create: addressCreateWithoutUser_addressesInput
}

input addressCreateOrConnectWithoutdriverInput {
  create: addressCreateWithoutDriverInput!
  where: addressWhereUniqueInput!
}

input addressCreateOrConnectWithoutorderInput {
  create: addressCreateWithoutOrder_addressToorder_drop_address_idInput!
  where: addressWhereUniqueInput!
}

input addressCreateOrConnectWithoutstoreInput {
  create: addressCreateWithoutStoreInput!
  where: addressWhereUniqueInput!
}

input addressCreateOrConnectWithoutuser_addressesInput {
  create: addressCreateWithoutUser_addressesInput!
  where: addressWhereUniqueInput!
}

input addressCreateWithoutDriverInput {
  city: String
  country: String
  created_at: DateTime
  id: String
  lat: Float
  lng: Float
  mobile: Float
  name: String
  order_addressToorder_drop_address_id: orderCreateManyWithoutAddress_addressToorder_drop_address_idInput
  order_addressToorder_pickup_address_id: orderCreateManyWithoutAddress_addressToorder_pickup_address_idInput
  pincode: Float
  region: String
  store: storeCreateManyWithoutAddressInput
  street_one: String
  street_two: String
  user_addresses: user_addressesCreateManyWithoutAddressInput
}

input addressCreateWithoutOrder_addressToorder_drop_address_idInput {
  city: String
  country: String
  created_at: DateTime
  driver: driverCreateManyWithoutAddressInput
  id: String
  lat: Float
  lng: Float
  mobile: Float
  name: String
  order_addressToorder_pickup_address_id: orderCreateManyWithoutAddress_addressToorder_pickup_address_idInput
  pincode: Float
  region: String
  store: storeCreateManyWithoutAddressInput
  street_one: String
  street_two: String
  user_addresses: user_addressesCreateManyWithoutAddressInput
}

input addressCreateWithoutOrder_addressToorder_pickup_address_idInput {
  city: String
  country: String
  created_at: DateTime
  driver: driverCreateManyWithoutAddressInput
  id: String
  lat: Float
  lng: Float
  mobile: Float
  name: String
  order_addressToorder_drop_address_id: orderCreateManyWithoutAddress_addressToorder_drop_address_idInput
  pincode: Float
  region: String
  store: storeCreateManyWithoutAddressInput
  street_one: String
  street_two: String
  user_addresses: user_addressesCreateManyWithoutAddressInput
}

input addressCreateWithoutStoreInput {
  city: String
  country: String
  created_at: DateTime
  driver: driverCreateManyWithoutAddressInput
  id: String
  lat: Float
  lng: Float
  mobile: Float
  name: String
  order_addressToorder_drop_address_id: orderCreateManyWithoutAddress_addressToorder_drop_address_idInput
  order_addressToorder_pickup_address_id: orderCreateManyWithoutAddress_addressToorder_pickup_address_idInput
  pincode: Float
  region: String
  street_one: String
  street_two: String
  user_addresses: user_addressesCreateManyWithoutAddressInput
}

input addressCreateWithoutUser_addressesInput {
  city: String
  country: String
  created_at: DateTime
  driver: driverCreateManyWithoutAddressInput
  id: String
  lat: Float
  lng: Float
  mobile: Float
  name: String
  order_addressToorder_drop_address_id: orderCreateManyWithoutAddress_addressToorder_drop_address_idInput
  order_addressToorder_pickup_address_id: orderCreateManyWithoutAddress_addressToorder_pickup_address_idInput
  pincode: Float
  region: String
  store: storeCreateManyWithoutAddressInput
  street_one: String
  street_two: String
}

input addressOrderByInput {
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  lat: SortOrder
  lng: SortOrder
  mobile: SortOrder
  name: SortOrder
  pincode: SortOrder
  region: SortOrder
  street_one: SortOrder
  street_two: SortOrder
}

input addressUpdateInput {
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateManyWithoutAddressInput
  id: StringFieldUpdateOperationsInput
  lat: NullableFloatFieldUpdateOperationsInput
  lng: NullableFloatFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order_addressToorder_drop_address_id: orderUpdateManyWithoutAddress_addressToorder_drop_address_idInput
  order_addressToorder_pickup_address_id: orderUpdateManyWithoutAddress_addressToorder_pickup_address_idInput
  pincode: NullableFloatFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  store: storeUpdateManyWithoutAddressInput
  street_one: NullableStringFieldUpdateOperationsInput
  street_two: NullableStringFieldUpdateOperationsInput
  user_addresses: user_addressesUpdateManyWithoutAddressInput
}

input addressUpdateManyMutationInput {
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lat: NullableFloatFieldUpdateOperationsInput
  lng: NullableFloatFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  pincode: NullableFloatFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  street_one: NullableStringFieldUpdateOperationsInput
  street_two: NullableStringFieldUpdateOperationsInput
}

input addressUpdateOneWithoutDriverInput {
  connect: addressWhereUniqueInput
  connectOrCreate: addressCreateOrConnectWithoutdriverInput
  create: addressCreateWithoutDriverInput
  delete: Boolean
  disconnect: Boolean
  update: addressUpdateWithoutDriverDataInput
  upsert: addressUpsertWithoutDriverInput
}

input addressUpdateOneWithoutOrder_addressToorder_drop_address_idInput {
  connect: addressWhereUniqueInput
  connectOrCreate: addressCreateOrConnectWithoutorderInput
  create: addressCreateWithoutOrder_addressToorder_drop_address_idInput
  delete: Boolean
  disconnect: Boolean
  update: addressUpdateWithoutOrder_addressToorder_drop_address_idDataInput
  upsert: addressUpsertWithoutOrder_addressToorder_drop_address_idInput
}

input addressUpdateOneWithoutOrder_addressToorder_pickup_address_idInput {
  connect: addressWhereUniqueInput
  connectOrCreate: addressCreateOrConnectWithoutorderInput
  create: addressCreateWithoutOrder_addressToorder_pickup_address_idInput
  delete: Boolean
  disconnect: Boolean
  update: addressUpdateWithoutOrder_addressToorder_pickup_address_idDataInput
  upsert: addressUpsertWithoutOrder_addressToorder_pickup_address_idInput
}

input addressUpdateOneWithoutStoreInput {
  connect: addressWhereUniqueInput
  connectOrCreate: addressCreateOrConnectWithoutstoreInput
  create: addressCreateWithoutStoreInput
  delete: Boolean
  disconnect: Boolean
  update: addressUpdateWithoutStoreDataInput
  upsert: addressUpsertWithoutStoreInput
}

input addressUpdateOneWithoutUser_addressesInput {
  connect: addressWhereUniqueInput
  connectOrCreate: addressCreateOrConnectWithoutuser_addressesInput
  create: addressCreateWithoutUser_addressesInput
  delete: Boolean
  disconnect: Boolean
  update: addressUpdateWithoutUser_addressesDataInput
  upsert: addressUpsertWithoutUser_addressesInput
}

input addressUpdateWithoutDriverDataInput {
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lat: NullableFloatFieldUpdateOperationsInput
  lng: NullableFloatFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order_addressToorder_drop_address_id: orderUpdateManyWithoutAddress_addressToorder_drop_address_idInput
  order_addressToorder_pickup_address_id: orderUpdateManyWithoutAddress_addressToorder_pickup_address_idInput
  pincode: NullableFloatFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  store: storeUpdateManyWithoutAddressInput
  street_one: NullableStringFieldUpdateOperationsInput
  street_two: NullableStringFieldUpdateOperationsInput
  user_addresses: user_addressesUpdateManyWithoutAddressInput
}

input addressUpdateWithoutOrder_addressToorder_drop_address_idDataInput {
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateManyWithoutAddressInput
  id: StringFieldUpdateOperationsInput
  lat: NullableFloatFieldUpdateOperationsInput
  lng: NullableFloatFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order_addressToorder_pickup_address_id: orderUpdateManyWithoutAddress_addressToorder_pickup_address_idInput
  pincode: NullableFloatFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  store: storeUpdateManyWithoutAddressInput
  street_one: NullableStringFieldUpdateOperationsInput
  street_two: NullableStringFieldUpdateOperationsInput
  user_addresses: user_addressesUpdateManyWithoutAddressInput
}

input addressUpdateWithoutOrder_addressToorder_pickup_address_idDataInput {
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateManyWithoutAddressInput
  id: StringFieldUpdateOperationsInput
  lat: NullableFloatFieldUpdateOperationsInput
  lng: NullableFloatFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order_addressToorder_drop_address_id: orderUpdateManyWithoutAddress_addressToorder_drop_address_idInput
  pincode: NullableFloatFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  store: storeUpdateManyWithoutAddressInput
  street_one: NullableStringFieldUpdateOperationsInput
  street_two: NullableStringFieldUpdateOperationsInput
  user_addresses: user_addressesUpdateManyWithoutAddressInput
}

input addressUpdateWithoutStoreDataInput {
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateManyWithoutAddressInput
  id: StringFieldUpdateOperationsInput
  lat: NullableFloatFieldUpdateOperationsInput
  lng: NullableFloatFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order_addressToorder_drop_address_id: orderUpdateManyWithoutAddress_addressToorder_drop_address_idInput
  order_addressToorder_pickup_address_id: orderUpdateManyWithoutAddress_addressToorder_pickup_address_idInput
  pincode: NullableFloatFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  street_one: NullableStringFieldUpdateOperationsInput
  street_two: NullableStringFieldUpdateOperationsInput
  user_addresses: user_addressesUpdateManyWithoutAddressInput
}

input addressUpdateWithoutUser_addressesDataInput {
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateManyWithoutAddressInput
  id: StringFieldUpdateOperationsInput
  lat: NullableFloatFieldUpdateOperationsInput
  lng: NullableFloatFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order_addressToorder_drop_address_id: orderUpdateManyWithoutAddress_addressToorder_drop_address_idInput
  order_addressToorder_pickup_address_id: orderUpdateManyWithoutAddress_addressToorder_pickup_address_idInput
  pincode: NullableFloatFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  store: storeUpdateManyWithoutAddressInput
  street_one: NullableStringFieldUpdateOperationsInput
  street_two: NullableStringFieldUpdateOperationsInput
}

input addressUpsertWithoutDriverInput {
  create: addressCreateWithoutDriverInput!
  update: addressUpdateWithoutDriverDataInput!
}

input addressUpsertWithoutOrder_addressToorder_drop_address_idInput {
  create: addressCreateWithoutOrder_addressToorder_drop_address_idInput!
  update: addressUpdateWithoutOrder_addressToorder_drop_address_idDataInput!
}

input addressUpsertWithoutOrder_addressToorder_pickup_address_idInput {
  create: addressCreateWithoutOrder_addressToorder_pickup_address_idInput!
  update: addressUpdateWithoutOrder_addressToorder_pickup_address_idDataInput!
}

input addressUpsertWithoutStoreInput {
  create: addressCreateWithoutStoreInput!
  update: addressUpdateWithoutStoreDataInput!
}

input addressUpsertWithoutUser_addressesInput {
  create: addressCreateWithoutUser_addressesInput!
  update: addressUpdateWithoutUser_addressesDataInput!
}

input addressWhereInput {
  AND: [addressWhereInput!]
  city: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  driver: DriverListRelationFilter
  id: StringFilter
  lat: FloatNullableFilter
  lng: FloatNullableFilter
  mobile: FloatNullableFilter
  name: StringNullableFilter
  NOT: [addressWhereInput!]
  OR: [addressWhereInput!]
  order_addressToorder_drop_address_id: OrderListRelationFilter
  order_addressToorder_pickup_address_id: OrderListRelationFilter
  pincode: FloatNullableFilter
  region: StringNullableFilter
  store: StoreListRelationFilter
  street_one: StringNullableFilter
  street_two: StringNullableFilter
  user_addresses: User_addressesListRelationFilter
}

input addressWhereUniqueInput {
  id: String
  mobile: Float
}

type bank_detail {
  account_name: String
  account_no: Float
  bank_name: String
  created_at: DateTime
  driver: driver
  driver_id: String
  id: String!
  ifsc_code: String
  store: store
  store_id: String
}

input bank_detailCreateInput {
  account_name: String
  account_no: Float
  bank_name: String
  created_at: DateTime
  driver: driverCreateOneWithoutBank_detailInput
  id: String
  ifsc_code: String
  store: storeCreateOneWithoutBank_detailInput
}

input bank_detailCreateManyWithoutDriverInput {
  connect: [bank_detailWhereUniqueInput!]
  connectOrCreate: [bank_detailCreateOrConnectWithoutdriverInput!]
  create: [bank_detailCreateWithoutDriverInput!]
}

input bank_detailCreateManyWithoutStoreInput {
  connect: [bank_detailWhereUniqueInput!]
  connectOrCreate: [bank_detailCreateOrConnectWithoutstoreInput!]
  create: [bank_detailCreateWithoutStoreInput!]
}

input bank_detailCreateOrConnectWithoutdriverInput {
  create: bank_detailCreateWithoutDriverInput!
  where: bank_detailWhereUniqueInput!
}

input bank_detailCreateOrConnectWithoutstoreInput {
  create: bank_detailCreateWithoutStoreInput!
  where: bank_detailWhereUniqueInput!
}

input bank_detailCreateWithoutDriverInput {
  account_name: String
  account_no: Float
  bank_name: String
  created_at: DateTime
  id: String
  ifsc_code: String
  store: storeCreateOneWithoutBank_detailInput
}

input bank_detailCreateWithoutStoreInput {
  account_name: String
  account_no: Float
  bank_name: String
  created_at: DateTime
  driver: driverCreateOneWithoutBank_detailInput
  id: String
  ifsc_code: String
}

input Bank_detailListRelationFilter {
  every: bank_detailWhereInput
  none: bank_detailWhereInput
  some: bank_detailWhereInput
}

input bank_detailOrderByInput {
  account_name: SortOrder
  account_no: SortOrder
  bank_name: SortOrder
  created_at: SortOrder
  driver_id: SortOrder
  id: SortOrder
  ifsc_code: SortOrder
  store_id: SortOrder
}

input bank_detailScalarWhereInput {
  account_name: StringNullableFilter
  account_no: FloatNullableFilter
  AND: [bank_detailScalarWhereInput!]
  bank_name: StringNullableFilter
  created_at: DateTimeNullableFilter
  driver_id: StringNullableFilter
  id: StringFilter
  ifsc_code: StringNullableFilter
  NOT: [bank_detailScalarWhereInput!]
  OR: [bank_detailScalarWhereInput!]
  store_id: StringNullableFilter
}

input bank_detailUpdateInput {
  account_name: NullableStringFieldUpdateOperationsInput
  account_no: NullableFloatFieldUpdateOperationsInput
  bank_name: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutBank_detailInput
  id: StringFieldUpdateOperationsInput
  ifsc_code: NullableStringFieldUpdateOperationsInput
  store: storeUpdateOneWithoutBank_detailInput
}

input bank_detailUpdateManyDataInput {
  account_name: NullableStringFieldUpdateOperationsInput
  account_no: NullableFloatFieldUpdateOperationsInput
  bank_name: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  ifsc_code: NullableStringFieldUpdateOperationsInput
}

input bank_detailUpdateManyMutationInput {
  account_name: NullableStringFieldUpdateOperationsInput
  account_no: NullableFloatFieldUpdateOperationsInput
  bank_name: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  ifsc_code: NullableStringFieldUpdateOperationsInput
}

input bank_detailUpdateManyWithoutDriverInput {
  connect: [bank_detailWhereUniqueInput!]
  connectOrCreate: [bank_detailCreateOrConnectWithoutdriverInput!]
  create: [bank_detailCreateWithoutDriverInput!]
  delete: [bank_detailWhereUniqueInput!]
  deleteMany: [bank_detailScalarWhereInput!]
  disconnect: [bank_detailWhereUniqueInput!]
  set: [bank_detailWhereUniqueInput!]
  update: [bank_detailUpdateWithWhereUniqueWithoutDriverInput!]
  updateMany: [bank_detailUpdateManyWithWhereNestedInput!]
  upsert: [bank_detailUpsertWithWhereUniqueWithoutDriverInput!]
}

input bank_detailUpdateManyWithoutStoreInput {
  connect: [bank_detailWhereUniqueInput!]
  connectOrCreate: [bank_detailCreateOrConnectWithoutstoreInput!]
  create: [bank_detailCreateWithoutStoreInput!]
  delete: [bank_detailWhereUniqueInput!]
  deleteMany: [bank_detailScalarWhereInput!]
  disconnect: [bank_detailWhereUniqueInput!]
  set: [bank_detailWhereUniqueInput!]
  update: [bank_detailUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [bank_detailUpdateManyWithWhereNestedInput!]
  upsert: [bank_detailUpsertWithWhereUniqueWithoutStoreInput!]
}

input bank_detailUpdateManyWithWhereNestedInput {
  data: bank_detailUpdateManyDataInput!
  where: bank_detailScalarWhereInput!
}

input bank_detailUpdateWithoutDriverDataInput {
  account_name: NullableStringFieldUpdateOperationsInput
  account_no: NullableFloatFieldUpdateOperationsInput
  bank_name: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  ifsc_code: NullableStringFieldUpdateOperationsInput
  store: storeUpdateOneWithoutBank_detailInput
}

input bank_detailUpdateWithoutStoreDataInput {
  account_name: NullableStringFieldUpdateOperationsInput
  account_no: NullableFloatFieldUpdateOperationsInput
  bank_name: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutBank_detailInput
  id: StringFieldUpdateOperationsInput
  ifsc_code: NullableStringFieldUpdateOperationsInput
}

input bank_detailUpdateWithWhereUniqueWithoutDriverInput {
  data: bank_detailUpdateWithoutDriverDataInput!
  where: bank_detailWhereUniqueInput!
}

input bank_detailUpdateWithWhereUniqueWithoutStoreInput {
  data: bank_detailUpdateWithoutStoreDataInput!
  where: bank_detailWhereUniqueInput!
}

input bank_detailUpsertWithWhereUniqueWithoutDriverInput {
  create: bank_detailCreateWithoutDriverInput!
  update: bank_detailUpdateWithoutDriverDataInput!
  where: bank_detailWhereUniqueInput!
}

input bank_detailUpsertWithWhereUniqueWithoutStoreInput {
  create: bank_detailCreateWithoutStoreInput!
  update: bank_detailUpdateWithoutStoreDataInput!
  where: bank_detailWhereUniqueInput!
}

input bank_detailWhereInput {
  account_name: StringNullableFilter
  account_no: FloatNullableFilter
  AND: [bank_detailWhereInput!]
  bank_name: StringNullableFilter
  created_at: DateTimeNullableFilter
  driver: driverWhereInput
  driver_id: StringNullableFilter
  id: StringFilter
  ifsc_code: StringNullableFilter
  NOT: [bank_detailWhereInput!]
  OR: [bank_detailWhereInput!]
  store: storeWhereInput
  store_id: StringNullableFilter
}

input bank_detailWhereUniqueInput {
  id: String
}

type BatchPayload {
  count: Int!
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

scalar DateTime

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

enum document_types {
  aadhar
  dl
  photo
}

type driver {
  address: address
  address_id: String
  bank_detail(after: bank_detailWhereUniqueInput, before: bank_detailWhereUniqueInput, first: Int, last: Int): [bank_detail!]!
  created_at: DateTime
  driver_document(after: driver_documentWhereUniqueInput, before: driver_documentWhereUniqueInput, first: Int, last: Int): [driver_document!]!
  id: String!
  mobile: Float
  order(after: orderWhereUniqueInput, before: orderWhereUniqueInput, first: Int, last: Int): [order!]!
  ticket(after: ticketWhereUniqueInput, before: ticketWhereUniqueInput, first: Int, last: Int): [ticket!]!
}

type driver_document {
  created_at: DateTime
  driver: driver
  driver_id: String
  id: String!
  type: document_types
  url: String
}

input driver_documentCreateInput {
  created_at: DateTime
  driver: driverCreateOneWithoutDriver_documentInput
  id: String
  type: document_types
  url: String
}

input driver_documentCreateManyWithoutDriverInput {
  connect: [driver_documentWhereUniqueInput!]
  connectOrCreate: [driver_documentCreateOrConnectWithoutdriverInput!]
  create: [driver_documentCreateWithoutDriverInput!]
}

input driver_documentCreateOrConnectWithoutdriverInput {
  create: driver_documentCreateWithoutDriverInput!
  where: driver_documentWhereUniqueInput!
}

input driver_documentCreateWithoutDriverInput {
  created_at: DateTime
  id: String
  type: document_types
  url: String
}

input Driver_documentListRelationFilter {
  every: driver_documentWhereInput
  none: driver_documentWhereInput
  some: driver_documentWhereInput
}

input driver_documentOrderByInput {
  created_at: SortOrder
  driver_id: SortOrder
  id: SortOrder
  type: SortOrder
  url: SortOrder
}

input driver_documentScalarWhereInput {
  AND: [driver_documentScalarWhereInput!]
  created_at: DateTimeNullableFilter
  driver_id: StringNullableFilter
  id: StringFilter
  NOT: [driver_documentScalarWhereInput!]
  OR: [driver_documentScalarWhereInput!]
  type: document_types
  url: StringNullableFilter
}

input driver_documentUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutDriver_documentInput
  id: StringFieldUpdateOperationsInput
  type: document_types
  url: NullableStringFieldUpdateOperationsInput
}

input driver_documentUpdateManyDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  type: document_types
  url: NullableStringFieldUpdateOperationsInput
}

input driver_documentUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  type: document_types
  url: NullableStringFieldUpdateOperationsInput
}

input driver_documentUpdateManyWithoutDriverInput {
  connect: [driver_documentWhereUniqueInput!]
  connectOrCreate: [driver_documentCreateOrConnectWithoutdriverInput!]
  create: [driver_documentCreateWithoutDriverInput!]
  delete: [driver_documentWhereUniqueInput!]
  deleteMany: [driver_documentScalarWhereInput!]
  disconnect: [driver_documentWhereUniqueInput!]
  set: [driver_documentWhereUniqueInput!]
  update: [driver_documentUpdateWithWhereUniqueWithoutDriverInput!]
  updateMany: [driver_documentUpdateManyWithWhereNestedInput!]
  upsert: [driver_documentUpsertWithWhereUniqueWithoutDriverInput!]
}

input driver_documentUpdateManyWithWhereNestedInput {
  data: driver_documentUpdateManyDataInput!
  where: driver_documentScalarWhereInput!
}

input driver_documentUpdateWithoutDriverDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  type: document_types
  url: NullableStringFieldUpdateOperationsInput
}

input driver_documentUpdateWithWhereUniqueWithoutDriverInput {
  data: driver_documentUpdateWithoutDriverDataInput!
  where: driver_documentWhereUniqueInput!
}

input driver_documentUpsertWithWhereUniqueWithoutDriverInput {
  create: driver_documentCreateWithoutDriverInput!
  update: driver_documentUpdateWithoutDriverDataInput!
  where: driver_documentWhereUniqueInput!
}

input driver_documentWhereInput {
  AND: [driver_documentWhereInput!]
  created_at: DateTimeNullableFilter
  driver: driverWhereInput
  driver_id: StringNullableFilter
  id: StringFilter
  NOT: [driver_documentWhereInput!]
  OR: [driver_documentWhereInput!]
  type: document_types
  url: StringNullableFilter
}

input driver_documentWhereUniqueInput {
  id: String
}

input driverCreateInput {
  address: addressCreateOneWithoutDriverInput
  bank_detail: bank_detailCreateManyWithoutDriverInput
  created_at: DateTime
  driver_document: driver_documentCreateManyWithoutDriverInput
  id: String
  mobile: Float
  order: orderCreateManyWithoutDriverInput
  ticket: ticketCreateManyWithoutDriverInput
}

input driverCreateManyWithoutAddressInput {
  connect: [driverWhereUniqueInput!]
  connectOrCreate: [driverCreateOrConnectWithoutaddressInput!]
  create: [driverCreateWithoutAddressInput!]
}

input driverCreateOneWithoutBank_detailInput {
  connect: driverWhereUniqueInput
  connectOrCreate: driverCreateOrConnectWithoutbank_detailInput
  create: driverCreateWithoutBank_detailInput
}

input driverCreateOneWithoutDriver_documentInput {
  connect: driverWhereUniqueInput
  connectOrCreate: driverCreateOrConnectWithoutdriver_documentInput
  create: driverCreateWithoutDriver_documentInput
}

input driverCreateOneWithoutOrderInput {
  connect: driverWhereUniqueInput
  connectOrCreate: driverCreateOrConnectWithoutorderInput
  create: driverCreateWithoutOrderInput
}

input driverCreateOneWithoutTicketInput {
  connect: driverWhereUniqueInput
  connectOrCreate: driverCreateOrConnectWithoutticketInput
  create: driverCreateWithoutTicketInput
}

input driverCreateOrConnectWithoutaddressInput {
  create: driverCreateWithoutAddressInput!
  where: driverWhereUniqueInput!
}

input driverCreateOrConnectWithoutbank_detailInput {
  create: driverCreateWithoutBank_detailInput!
  where: driverWhereUniqueInput!
}

input driverCreateOrConnectWithoutdriver_documentInput {
  create: driverCreateWithoutDriver_documentInput!
  where: driverWhereUniqueInput!
}

input driverCreateOrConnectWithoutorderInput {
  create: driverCreateWithoutOrderInput!
  where: driverWhereUniqueInput!
}

input driverCreateOrConnectWithoutticketInput {
  create: driverCreateWithoutTicketInput!
  where: driverWhereUniqueInput!
}

input driverCreateWithoutAddressInput {
  bank_detail: bank_detailCreateManyWithoutDriverInput
  created_at: DateTime
  driver_document: driver_documentCreateManyWithoutDriverInput
  id: String
  mobile: Float
  order: orderCreateManyWithoutDriverInput
  ticket: ticketCreateManyWithoutDriverInput
}

input driverCreateWithoutBank_detailInput {
  address: addressCreateOneWithoutDriverInput
  created_at: DateTime
  driver_document: driver_documentCreateManyWithoutDriverInput
  id: String
  mobile: Float
  order: orderCreateManyWithoutDriverInput
  ticket: ticketCreateManyWithoutDriverInput
}

input driverCreateWithoutDriver_documentInput {
  address: addressCreateOneWithoutDriverInput
  bank_detail: bank_detailCreateManyWithoutDriverInput
  created_at: DateTime
  id: String
  mobile: Float
  order: orderCreateManyWithoutDriverInput
  ticket: ticketCreateManyWithoutDriverInput
}

input driverCreateWithoutOrderInput {
  address: addressCreateOneWithoutDriverInput
  bank_detail: bank_detailCreateManyWithoutDriverInput
  created_at: DateTime
  driver_document: driver_documentCreateManyWithoutDriverInput
  id: String
  mobile: Float
  ticket: ticketCreateManyWithoutDriverInput
}

input driverCreateWithoutTicketInput {
  address: addressCreateOneWithoutDriverInput
  bank_detail: bank_detailCreateManyWithoutDriverInput
  created_at: DateTime
  driver_document: driver_documentCreateManyWithoutDriverInput
  id: String
  mobile: Float
  order: orderCreateManyWithoutDriverInput
}

input DriverListRelationFilter {
  every: driverWhereInput
  none: driverWhereInput
  some: driverWhereInput
}

input driverOrderByInput {
  address_id: SortOrder
  created_at: SortOrder
  id: SortOrder
  mobile: SortOrder
}

input driverScalarWhereInput {
  address_id: StringNullableFilter
  AND: [driverScalarWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  mobile: FloatNullableFilter
  NOT: [driverScalarWhereInput!]
  OR: [driverScalarWhereInput!]
}

input driverUpdateInput {
  address: addressUpdateOneWithoutDriverInput
  bank_detail: bank_detailUpdateManyWithoutDriverInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver_document: driver_documentUpdateManyWithoutDriverInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  order: orderUpdateManyWithoutDriverInput
  ticket: ticketUpdateManyWithoutDriverInput
}

input driverUpdateManyDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
}

input driverUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
}

input driverUpdateManyWithoutAddressInput {
  connect: [driverWhereUniqueInput!]
  connectOrCreate: [driverCreateOrConnectWithoutaddressInput!]
  create: [driverCreateWithoutAddressInput!]
  delete: [driverWhereUniqueInput!]
  deleteMany: [driverScalarWhereInput!]
  disconnect: [driverWhereUniqueInput!]
  set: [driverWhereUniqueInput!]
  update: [driverUpdateWithWhereUniqueWithoutAddressInput!]
  updateMany: [driverUpdateManyWithWhereNestedInput!]
  upsert: [driverUpsertWithWhereUniqueWithoutAddressInput!]
}

input driverUpdateManyWithWhereNestedInput {
  data: driverUpdateManyDataInput!
  where: driverScalarWhereInput!
}

input driverUpdateOneWithoutBank_detailInput {
  connect: driverWhereUniqueInput
  connectOrCreate: driverCreateOrConnectWithoutbank_detailInput
  create: driverCreateWithoutBank_detailInput
  delete: Boolean
  disconnect: Boolean
  update: driverUpdateWithoutBank_detailDataInput
  upsert: driverUpsertWithoutBank_detailInput
}

input driverUpdateOneWithoutDriver_documentInput {
  connect: driverWhereUniqueInput
  connectOrCreate: driverCreateOrConnectWithoutdriver_documentInput
  create: driverCreateWithoutDriver_documentInput
  delete: Boolean
  disconnect: Boolean
  update: driverUpdateWithoutDriver_documentDataInput
  upsert: driverUpsertWithoutDriver_documentInput
}

input driverUpdateOneWithoutOrderInput {
  connect: driverWhereUniqueInput
  connectOrCreate: driverCreateOrConnectWithoutorderInput
  create: driverCreateWithoutOrderInput
  delete: Boolean
  disconnect: Boolean
  update: driverUpdateWithoutOrderDataInput
  upsert: driverUpsertWithoutOrderInput
}

input driverUpdateOneWithoutTicketInput {
  connect: driverWhereUniqueInput
  connectOrCreate: driverCreateOrConnectWithoutticketInput
  create: driverCreateWithoutTicketInput
  delete: Boolean
  disconnect: Boolean
  update: driverUpdateWithoutTicketDataInput
  upsert: driverUpsertWithoutTicketInput
}

input driverUpdateWithoutAddressDataInput {
  bank_detail: bank_detailUpdateManyWithoutDriverInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver_document: driver_documentUpdateManyWithoutDriverInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  order: orderUpdateManyWithoutDriverInput
  ticket: ticketUpdateManyWithoutDriverInput
}

input driverUpdateWithoutBank_detailDataInput {
  address: addressUpdateOneWithoutDriverInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver_document: driver_documentUpdateManyWithoutDriverInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  order: orderUpdateManyWithoutDriverInput
  ticket: ticketUpdateManyWithoutDriverInput
}

input driverUpdateWithoutDriver_documentDataInput {
  address: addressUpdateOneWithoutDriverInput
  bank_detail: bank_detailUpdateManyWithoutDriverInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  order: orderUpdateManyWithoutDriverInput
  ticket: ticketUpdateManyWithoutDriverInput
}

input driverUpdateWithoutOrderDataInput {
  address: addressUpdateOneWithoutDriverInput
  bank_detail: bank_detailUpdateManyWithoutDriverInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver_document: driver_documentUpdateManyWithoutDriverInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  ticket: ticketUpdateManyWithoutDriverInput
}

input driverUpdateWithoutTicketDataInput {
  address: addressUpdateOneWithoutDriverInput
  bank_detail: bank_detailUpdateManyWithoutDriverInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver_document: driver_documentUpdateManyWithoutDriverInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  order: orderUpdateManyWithoutDriverInput
}

input driverUpdateWithWhereUniqueWithoutAddressInput {
  data: driverUpdateWithoutAddressDataInput!
  where: driverWhereUniqueInput!
}

input driverUpsertWithoutBank_detailInput {
  create: driverCreateWithoutBank_detailInput!
  update: driverUpdateWithoutBank_detailDataInput!
}

input driverUpsertWithoutDriver_documentInput {
  create: driverCreateWithoutDriver_documentInput!
  update: driverUpdateWithoutDriver_documentDataInput!
}

input driverUpsertWithoutOrderInput {
  create: driverCreateWithoutOrderInput!
  update: driverUpdateWithoutOrderDataInput!
}

input driverUpsertWithoutTicketInput {
  create: driverCreateWithoutTicketInput!
  update: driverUpdateWithoutTicketDataInput!
}

input driverUpsertWithWhereUniqueWithoutAddressInput {
  create: driverCreateWithoutAddressInput!
  update: driverUpdateWithoutAddressDataInput!
  where: driverWhereUniqueInput!
}

input driverWhereInput {
  address: addressWhereInput
  address_id: StringNullableFilter
  AND: [driverWhereInput!]
  bank_detail: Bank_detailListRelationFilter
  created_at: DateTimeNullableFilter
  driver_document: Driver_documentListRelationFilter
  id: StringFilter
  mobile: FloatNullableFilter
  NOT: [driverWhereInput!]
  OR: [driverWhereInput!]
  order: OrderListRelationFilter
  ticket: TicketListRelationFilter
}

input driverWhereUniqueInput {
  id: String
  mobile: Float
}

input FloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

type imageObj {
  imageUrl: String!
}

type MobileAuthPayload {
  accessToken: String!
  user: user!
}

type Mutation {
  createAddress(data: addressCreateInput!): address!
  createOneaddress(data: addressCreateInput!): address!
  createOnebankDetail(data: bank_detailCreateInput!): bank_detail!
  createOnedriver(data: driverCreateInput!): driver!
  createOnedriverDocument(data: driver_documentCreateInput!): driver_document!
  createOneorder(data: orderCreateInput!): order!
  createOneorderProducts(data: order_productsCreateInput!): order_products!
  createOneproduct(data: productCreateInput!): product!
  createOneproductImage(data: product_imageCreateInput!): product_image!
  createOneproductSizes(data: product_sizesCreateInput!): product_sizes!
  createOnerating(data: ratingCreateInput!): rating!
  createOnesize(data: sizeCreateInput!): size!
  createOnestore(data: storeCreateInput!): store!
  createOnestoreDocument(data: store_documentCreateInput!): store_document!
  createOneticket(data: ticketCreateInput!): ticket!
  createOneticketHistory(data: ticket_historyCreateInput!): ticket_history!
  createOnetransaction(data: transactionCreateInput!): transaction!
  createOneuser(data: userCreateInput!): user!
  createOneuserAddresses(data: user_addressesCreateInput!): user_addresses!
  deleteManyaddress(where: addressWhereInput): BatchPayload!
  deleteManybankDetail(where: bank_detailWhereInput): BatchPayload!
  deleteManydriver(where: driverWhereInput): BatchPayload!
  deleteManydriverDocument(where: driver_documentWhereInput): BatchPayload!
  deleteManyorder(where: orderWhereInput): BatchPayload!
  deleteManyorderProducts(where: order_productsWhereInput): BatchPayload!
  deleteManyproduct(where: productWhereInput): BatchPayload!
  deleteManyproductImage(where: product_imageWhereInput): BatchPayload!
  deleteManyproductSizes(where: product_sizesWhereInput): BatchPayload!
  deleteManyrating(where: ratingWhereInput): BatchPayload!
  deleteManysize(where: sizeWhereInput): BatchPayload!
  deleteManystore(where: storeWhereInput): BatchPayload!
  deleteManystoreDocument(where: store_documentWhereInput): BatchPayload!
  deleteManyticket(where: ticketWhereInput): BatchPayload!
  deleteManyticketHistory(where: ticket_historyWhereInput): BatchPayload!
  deleteManytransaction(where: transactionWhereInput): BatchPayload!
  deleteManyuser(where: userWhereInput): BatchPayload!
  deleteManyuserAddresses(where: user_addressesWhereInput): BatchPayload!
  deleteOneaddress(where: addressWhereUniqueInput!): address
  deleteOnebankDetail(where: bank_detailWhereUniqueInput!): bank_detail
  deleteOnedriver(where: driverWhereUniqueInput!): driver
  deleteOnedriverDocument(where: driver_documentWhereUniqueInput!): driver_document
  deleteOneorder(where: orderWhereUniqueInput!): order
  deleteOneorderProducts(where: order_productsWhereUniqueInput!): order_products
  deleteOneproduct(where: productWhereUniqueInput!): product
  deleteOneproductImage(where: product_imageWhereUniqueInput!): product_image
  deleteOneproductSizes(where: product_sizesWhereUniqueInput!): product_sizes
  deleteOnerating(where: ratingWhereUniqueInput!): rating
  deleteOnesize(where: sizeWhereUniqueInput!): size
  deleteOnestore(where: storeWhereUniqueInput!): store
  deleteOnestoreDocument(where: store_documentWhereUniqueInput!): store_document
  deleteOneticket(where: ticketWhereUniqueInput!): ticket
  deleteOneticketHistory(where: ticket_historyWhereUniqueInput!): ticket_history
  deleteOnetransaction(where: transactionWhereUniqueInput!): transaction
  deleteOneuser(where: userWhereUniqueInput!): user
  deleteOneuserAddresses(where: user_addressesWhereUniqueInput!): user_addresses
  mobileLogin(mobile: Float!, otp: Float!): MobileAuthPayload!
  sendOTP(mobile: Float!): OTP!
  updateManyaddress(data: addressUpdateManyMutationInput!, where: addressWhereInput): BatchPayload!
  updateManybankDetail(data: bank_detailUpdateManyMutationInput!, where: bank_detailWhereInput): BatchPayload!
  updateManydriver(data: driverUpdateManyMutationInput!, where: driverWhereInput): BatchPayload!
  updateManydriverDocument(data: driver_documentUpdateManyMutationInput!, where: driver_documentWhereInput): BatchPayload!
  updateManyorder(data: orderUpdateManyMutationInput!, where: orderWhereInput): BatchPayload!
  updateManyorderProducts(data: order_productsUpdateManyMutationInput!, where: order_productsWhereInput): BatchPayload!
  updateManyproduct(data: productUpdateManyMutationInput!, where: productWhereInput): BatchPayload!
  updateManyproductImage(data: product_imageUpdateManyMutationInput!, where: product_imageWhereInput): BatchPayload!
  updateManyproductSizes(data: product_sizesUpdateManyMutationInput!, where: product_sizesWhereInput): BatchPayload!
  updateManyrating(data: ratingUpdateManyMutationInput!, where: ratingWhereInput): BatchPayload!
  updateManysize(data: sizeUpdateManyMutationInput!, where: sizeWhereInput): BatchPayload!
  updateManystore(data: storeUpdateManyMutationInput!, where: storeWhereInput): BatchPayload!
  updateManystoreDocument(data: store_documentUpdateManyMutationInput!, where: store_documentWhereInput): BatchPayload!
  updateManyticket(data: ticketUpdateManyMutationInput!, where: ticketWhereInput): BatchPayload!
  updateManyticketHistory(data: ticket_historyUpdateManyMutationInput!, where: ticket_historyWhereInput): BatchPayload!
  updateManytransaction(data: transactionUpdateManyMutationInput!, where: transactionWhereInput): BatchPayload!
  updateManyuser(data: userUpdateManyMutationInput!, where: userWhereInput): BatchPayload!
  updateManyuserAddresses(data: user_addressesUpdateManyMutationInput!, where: user_addressesWhereInput): BatchPayload!
  updateOneaddress(data: addressUpdateInput!, where: addressWhereUniqueInput!): address
  updateOnebankDetail(data: bank_detailUpdateInput!, where: bank_detailWhereUniqueInput!): bank_detail
  updateOnedriver(data: driverUpdateInput!, where: driverWhereUniqueInput!): driver
  updateOnedriverDocument(data: driver_documentUpdateInput!, where: driver_documentWhereUniqueInput!): driver_document
  updateOneorder(data: orderUpdateInput!, where: orderWhereUniqueInput!): order
  updateOneorderProducts(data: order_productsUpdateInput!, where: order_productsWhereUniqueInput!): order_products
  updateOneproduct(data: productUpdateInput!, where: productWhereUniqueInput!): product
  updateOneproductImage(data: product_imageUpdateInput!, where: product_imageWhereUniqueInput!): product_image
  updateOneproductSizes(data: product_sizesUpdateInput!, where: product_sizesWhereUniqueInput!): product_sizes
  updateOnerating(data: ratingUpdateInput!, where: ratingWhereUniqueInput!): rating
  updateOnesize(data: sizeUpdateInput!, where: sizeWhereUniqueInput!): size
  updateOnestore(data: storeUpdateInput!, where: storeWhereUniqueInput!): store
  updateOnestoreDocument(data: store_documentUpdateInput!, where: store_documentWhereUniqueInput!): store_document
  updateOneticket(data: ticketUpdateInput!, where: ticketWhereUniqueInput!): ticket
  updateOneticketHistory(data: ticket_historyUpdateInput!, where: ticket_historyWhereUniqueInput!): ticket_history
  updateOnetransaction(data: transactionUpdateInput!, where: transactionWhereUniqueInput!): transaction
  updateOneuser(data: userUpdateInput!, where: userWhereUniqueInput!): user
  updateOneuserAddresses(data: user_addressesUpdateInput!, where: user_addressesWhereUniqueInput!): user_addresses
  uploadImage(image: Upload): imageObj!
  upsertOneaddress(create: addressCreateInput!, update: addressUpdateInput!, where: addressWhereUniqueInput!): address!
  upsertOnebankDetail(create: bank_detailCreateInput!, update: bank_detailUpdateInput!, where: bank_detailWhereUniqueInput!): bank_detail!
  upsertOnedriver(create: driverCreateInput!, update: driverUpdateInput!, where: driverWhereUniqueInput!): driver!
  upsertOnedriverDocument(create: driver_documentCreateInput!, update: driver_documentUpdateInput!, where: driver_documentWhereUniqueInput!): driver_document!
  upsertOneorder(create: orderCreateInput!, update: orderUpdateInput!, where: orderWhereUniqueInput!): order!
  upsertOneorderProducts(create: order_productsCreateInput!, update: order_productsUpdateInput!, where: order_productsWhereUniqueInput!): order_products!
  upsertOneproduct(create: productCreateInput!, update: productUpdateInput!, where: productWhereUniqueInput!): product!
  upsertOneproductImage(create: product_imageCreateInput!, update: product_imageUpdateInput!, where: product_imageWhereUniqueInput!): product_image!
  upsertOneproductSizes(create: product_sizesCreateInput!, update: product_sizesUpdateInput!, where: product_sizesWhereUniqueInput!): product_sizes!
  upsertOnerating(create: ratingCreateInput!, update: ratingUpdateInput!, where: ratingWhereUniqueInput!): rating!
  upsertOnesize(create: sizeCreateInput!, update: sizeUpdateInput!, where: sizeWhereUniqueInput!): size!
  upsertOnestore(create: storeCreateInput!, update: storeUpdateInput!, where: storeWhereUniqueInput!): store!
  upsertOnestoreDocument(create: store_documentCreateInput!, update: store_documentUpdateInput!, where: store_documentWhereUniqueInput!): store_document!
  upsertOneticket(create: ticketCreateInput!, update: ticketUpdateInput!, where: ticketWhereUniqueInput!): ticket!
  upsertOneticketHistory(create: ticket_historyCreateInput!, update: ticket_historyUpdateInput!, where: ticket_historyWhereUniqueInput!): ticket_history!
  upsertOnetransaction(create: transactionCreateInput!, update: transactionUpdateInput!, where: transactionWhereUniqueInput!): transaction!
  upsertOneuser(create: userCreateInput!, update: userUpdateInput!, where: userWhereUniqueInput!): user!
  upsertOneuserAddresses(create: user_addressesCreateInput!, update: user_addressesUpdateInput!, where: user_addressesWhereUniqueInput!): user_addresses!
  verifyOTP(mobile: Float!, otp: Int!): OTP!
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableFloatFieldUpdateOperationsInput {
  set: Float
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type order {
  active: Boolean
  created_at: DateTime
  driver: driver
  driver_id: String
  drop_address: address
  drop_address_id: String
  id: String!
  order_products(after: order_productsWhereUniqueInput, before: order_productsWhereUniqueInput, first: Int, last: Int): [order_products!]!
  otp: String
  pickup_address: address
  pickup_address_id: String
  ref_no: String
  shipping_cost: Float
  status: order_status
  store: store
  store_id: String
  total_commission: Float
  transaction(after: transactionWhereUniqueInput, before: transactionWhereUniqueInput, first: Int, last: Int): [transaction!]!
  user: user
  user_id: String
}

type order_products {
  created_at: DateTime
  discounted_price: Float
  id: String!
  order: order
  order_id: String
  product: product
  product_id: String
  quantity: Float
  selling_price: Float
  size: String
  updated_at: DateTime
}

input order_productsCreateInput {
  created_at: DateTime
  discounted_price: Float
  id: String
  order: orderCreateOneWithoutOrder_productsInput
  product: productCreateOneWithoutOrder_productsInput
  quantity: Float
  selling_price: Float
  size: String
  updated_at: DateTime
}

input order_productsCreateManyWithoutOrderInput {
  connect: [order_productsWhereUniqueInput!]
  connectOrCreate: [order_productsCreateOrConnectWithoutorderInput!]
  create: [order_productsCreateWithoutOrderInput!]
}

input order_productsCreateManyWithoutProductInput {
  connect: [order_productsWhereUniqueInput!]
  connectOrCreate: [order_productsCreateOrConnectWithoutproductInput!]
  create: [order_productsCreateWithoutProductInput!]
}

input order_productsCreateOrConnectWithoutorderInput {
  create: order_productsCreateWithoutOrderInput!
  where: order_productsWhereUniqueInput!
}

input order_productsCreateOrConnectWithoutproductInput {
  create: order_productsCreateWithoutProductInput!
  where: order_productsWhereUniqueInput!
}

input order_productsCreateWithoutOrderInput {
  created_at: DateTime
  discounted_price: Float
  id: String
  product: productCreateOneWithoutOrder_productsInput
  quantity: Float
  selling_price: Float
  size: String
  updated_at: DateTime
}

input order_productsCreateWithoutProductInput {
  created_at: DateTime
  discounted_price: Float
  id: String
  order: orderCreateOneWithoutOrder_productsInput
  quantity: Float
  selling_price: Float
  size: String
  updated_at: DateTime
}

input Order_productsListRelationFilter {
  every: order_productsWhereInput
  none: order_productsWhereInput
  some: order_productsWhereInput
}

input order_productsOrderByInput {
  created_at: SortOrder
  discounted_price: SortOrder
  id: SortOrder
  order_id: SortOrder
  product_id: SortOrder
  quantity: SortOrder
  selling_price: SortOrder
  size: SortOrder
  updated_at: SortOrder
}

input order_productsScalarWhereInput {
  AND: [order_productsScalarWhereInput!]
  created_at: DateTimeNullableFilter
  discounted_price: FloatNullableFilter
  id: StringFilter
  NOT: [order_productsScalarWhereInput!]
  OR: [order_productsScalarWhereInput!]
  order_id: StringNullableFilter
  product_id: StringNullableFilter
  quantity: FloatNullableFilter
  selling_price: FloatNullableFilter
  size: StringNullableFilter
  updated_at: DateTimeNullableFilter
}

input order_productsUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  discounted_price: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  order: orderUpdateOneWithoutOrder_productsInput
  product: productUpdateOneWithoutOrder_productsInput
  quantity: NullableFloatFieldUpdateOperationsInput
  selling_price: NullableFloatFieldUpdateOperationsInput
  size: NullableStringFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
}

input order_productsUpdateManyDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  discounted_price: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  quantity: NullableFloatFieldUpdateOperationsInput
  selling_price: NullableFloatFieldUpdateOperationsInput
  size: NullableStringFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
}

input order_productsUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  discounted_price: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  quantity: NullableFloatFieldUpdateOperationsInput
  selling_price: NullableFloatFieldUpdateOperationsInput
  size: NullableStringFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
}

input order_productsUpdateManyWithoutOrderInput {
  connect: [order_productsWhereUniqueInput!]
  connectOrCreate: [order_productsCreateOrConnectWithoutorderInput!]
  create: [order_productsCreateWithoutOrderInput!]
  delete: [order_productsWhereUniqueInput!]
  deleteMany: [order_productsScalarWhereInput!]
  disconnect: [order_productsWhereUniqueInput!]
  set: [order_productsWhereUniqueInput!]
  update: [order_productsUpdateWithWhereUniqueWithoutOrderInput!]
  updateMany: [order_productsUpdateManyWithWhereNestedInput!]
  upsert: [order_productsUpsertWithWhereUniqueWithoutOrderInput!]
}

input order_productsUpdateManyWithoutProductInput {
  connect: [order_productsWhereUniqueInput!]
  connectOrCreate: [order_productsCreateOrConnectWithoutproductInput!]
  create: [order_productsCreateWithoutProductInput!]
  delete: [order_productsWhereUniqueInput!]
  deleteMany: [order_productsScalarWhereInput!]
  disconnect: [order_productsWhereUniqueInput!]
  set: [order_productsWhereUniqueInput!]
  update: [order_productsUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [order_productsUpdateManyWithWhereNestedInput!]
  upsert: [order_productsUpsertWithWhereUniqueWithoutProductInput!]
}

input order_productsUpdateManyWithWhereNestedInput {
  data: order_productsUpdateManyDataInput!
  where: order_productsScalarWhereInput!
}

input order_productsUpdateWithoutOrderDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  discounted_price: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  product: productUpdateOneWithoutOrder_productsInput
  quantity: NullableFloatFieldUpdateOperationsInput
  selling_price: NullableFloatFieldUpdateOperationsInput
  size: NullableStringFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
}

input order_productsUpdateWithoutProductDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  discounted_price: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  order: orderUpdateOneWithoutOrder_productsInput
  quantity: NullableFloatFieldUpdateOperationsInput
  selling_price: NullableFloatFieldUpdateOperationsInput
  size: NullableStringFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
}

input order_productsUpdateWithWhereUniqueWithoutOrderInput {
  data: order_productsUpdateWithoutOrderDataInput!
  where: order_productsWhereUniqueInput!
}

input order_productsUpdateWithWhereUniqueWithoutProductInput {
  data: order_productsUpdateWithoutProductDataInput!
  where: order_productsWhereUniqueInput!
}

input order_productsUpsertWithWhereUniqueWithoutOrderInput {
  create: order_productsCreateWithoutOrderInput!
  update: order_productsUpdateWithoutOrderDataInput!
  where: order_productsWhereUniqueInput!
}

input order_productsUpsertWithWhereUniqueWithoutProductInput {
  create: order_productsCreateWithoutProductInput!
  update: order_productsUpdateWithoutProductDataInput!
  where: order_productsWhereUniqueInput!
}

input order_productsWhereInput {
  AND: [order_productsWhereInput!]
  created_at: DateTimeNullableFilter
  discounted_price: FloatNullableFilter
  id: StringFilter
  NOT: [order_productsWhereInput!]
  OR: [order_productsWhereInput!]
  order: orderWhereInput
  order_id: StringNullableFilter
  product: productWhereInput
  product_id: StringNullableFilter
  quantity: FloatNullableFilter
  selling_price: FloatNullableFilter
  size: StringNullableFilter
  updated_at: DateTimeNullableFilter
}

input order_productsWhereUniqueInput {
  id: String
}

enum order_status {
  arriving
  confirmed
  delivered
  ordered
}

input orderCreateInput {
  active: Boolean
  address_addressToorder_drop_address_id: addressCreateOneWithoutOrder_addressToorder_drop_address_idInput
  address_addressToorder_pickup_address_id: addressCreateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: DateTime
  driver: driverCreateOneWithoutOrderInput
  id: String
  order_products: order_productsCreateManyWithoutOrderInput
  shipping_cost: Float
  status: order_status
  store: storeCreateOneWithoutOrderInput
  total_commission: Float
  transaction: transactionCreateManyWithoutOrderInput
}

input orderCreateManyWithoutAddress_addressToorder_drop_address_idInput {
  connect: [orderWhereUniqueInput!]
  connectOrCreate: [orderCreateOrConnectWithoutaddressInput!]
  create: [orderCreateWithoutAddress_addressToorder_drop_address_idInput!]
}

input orderCreateManyWithoutAddress_addressToorder_pickup_address_idInput {
  connect: [orderWhereUniqueInput!]
  connectOrCreate: [orderCreateOrConnectWithoutaddressInput!]
  create: [orderCreateWithoutAddress_addressToorder_pickup_address_idInput!]
}

input orderCreateManyWithoutDriverInput {
  connect: [orderWhereUniqueInput!]
  connectOrCreate: [orderCreateOrConnectWithoutdriverInput!]
  create: [orderCreateWithoutDriverInput!]
}

input orderCreateManyWithoutStoreInput {
  connect: [orderWhereUniqueInput!]
  connectOrCreate: [orderCreateOrConnectWithoutstoreInput!]
  create: [orderCreateWithoutStoreInput!]
}

input orderCreateManyWithoutUserInput {
  connect: [orderWhereUniqueInput!]
  connectOrCreate: [orderCreateOrConnectWithoutuserInput!]
  create: [orderCreateWithoutUserInput!]
}

input orderCreateOneWithoutOrder_productsInput {
  connect: orderWhereUniqueInput
  connectOrCreate: orderCreateOrConnectWithoutorder_productsInput
  create: orderCreateWithoutOrder_productsInput
}

input orderCreateOneWithoutTransactionInput {
  connect: orderWhereUniqueInput
  connectOrCreate: orderCreateOrConnectWithouttransactionInput
  create: orderCreateWithoutTransactionInput
}

input orderCreateOrConnectWithoutaddressInput {
  create: orderCreateWithoutAddress_addressToorder_drop_address_idInput!
  where: orderWhereUniqueInput!
}

input orderCreateOrConnectWithoutdriverInput {
  create: orderCreateWithoutDriverInput!
  where: orderWhereUniqueInput!
}

input orderCreateOrConnectWithoutorder_productsInput {
  create: orderCreateWithoutOrder_productsInput!
  where: orderWhereUniqueInput!
}

input orderCreateOrConnectWithoutstoreInput {
  create: orderCreateWithoutStoreInput!
  where: orderWhereUniqueInput!
}

input orderCreateOrConnectWithouttransactionInput {
  create: orderCreateWithoutTransactionInput!
  where: orderWhereUniqueInput!
}

input orderCreateOrConnectWithoutuserInput {
  create: orderCreateWithoutUserInput!
  where: orderWhereUniqueInput!
}

input orderCreateWithoutAddress_addressToorder_drop_address_idInput {
  active: Boolean
  address_addressToorder_pickup_address_id: addressCreateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: DateTime
  driver: driverCreateOneWithoutOrderInput
  id: String
  order_products: order_productsCreateManyWithoutOrderInput
  otp: String
  ref_no: String
  shipping_cost: Float
  status: order_status
  store: storeCreateOneWithoutOrderInput
  total_commission: Float
  transaction: transactionCreateManyWithoutOrderInput
  user: userCreateOneWithoutOrderInput
}

input orderCreateWithoutAddress_addressToorder_pickup_address_idInput {
  active: Boolean
  address_addressToorder_drop_address_id: addressCreateOneWithoutOrder_addressToorder_drop_address_idInput
  created_at: DateTime
  driver: driverCreateOneWithoutOrderInput
  id: String
  order_products: order_productsCreateManyWithoutOrderInput
  otp: String
  ref_no: String
  shipping_cost: Float
  status: order_status
  store: storeCreateOneWithoutOrderInput
  total_commission: Float
  transaction: transactionCreateManyWithoutOrderInput
  user: userCreateOneWithoutOrderInput
}

input orderCreateWithoutDriverInput {
  active: Boolean
  address_addressToorder_drop_address_id: addressCreateOneWithoutOrder_addressToorder_drop_address_idInput
  address_addressToorder_pickup_address_id: addressCreateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: DateTime
  id: String
  order_products: order_productsCreateManyWithoutOrderInput
  otp: String
  ref_no: String
  shipping_cost: Float
  status: order_status
  store: storeCreateOneWithoutOrderInput
  total_commission: Float
  transaction: transactionCreateManyWithoutOrderInput
  user: userCreateOneWithoutOrderInput
}

input orderCreateWithoutOrder_productsInput {
  active: Boolean
  address_addressToorder_drop_address_id: addressCreateOneWithoutOrder_addressToorder_drop_address_idInput
  address_addressToorder_pickup_address_id: addressCreateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: DateTime
  driver: driverCreateOneWithoutOrderInput
  id: String
  otp: String
  ref_no: String
  shipping_cost: Float
  status: order_status
  store: storeCreateOneWithoutOrderInput
  total_commission: Float
  transaction: transactionCreateManyWithoutOrderInput
  user: userCreateOneWithoutOrderInput
}

input orderCreateWithoutStoreInput {
  active: Boolean
  address_addressToorder_drop_address_id: addressCreateOneWithoutOrder_addressToorder_drop_address_idInput
  address_addressToorder_pickup_address_id: addressCreateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: DateTime
  driver: driverCreateOneWithoutOrderInput
  id: String
  order_products: order_productsCreateManyWithoutOrderInput
  otp: String
  ref_no: String
  shipping_cost: Float
  status: order_status
  total_commission: Float
  transaction: transactionCreateManyWithoutOrderInput
  user: userCreateOneWithoutOrderInput
}

input orderCreateWithoutTransactionInput {
  active: Boolean
  address_addressToorder_drop_address_id: addressCreateOneWithoutOrder_addressToorder_drop_address_idInput
  address_addressToorder_pickup_address_id: addressCreateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: DateTime
  driver: driverCreateOneWithoutOrderInput
  id: String
  order_products: order_productsCreateManyWithoutOrderInput
  otp: String
  ref_no: String
  shipping_cost: Float
  status: order_status
  store: storeCreateOneWithoutOrderInput
  total_commission: Float
  user: userCreateOneWithoutOrderInput
}

input orderCreateWithoutUserInput {
  active: Boolean
  address_addressToorder_drop_address_id: addressCreateOneWithoutOrder_addressToorder_drop_address_idInput
  address_addressToorder_pickup_address_id: addressCreateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: DateTime
  driver: driverCreateOneWithoutOrderInput
  id: String
  order_products: order_productsCreateManyWithoutOrderInput
  otp: String
  ref_no: String
  shipping_cost: Float
  status: order_status
  store: storeCreateOneWithoutOrderInput
  total_commission: Float
  transaction: transactionCreateManyWithoutOrderInput
}

input OrderListRelationFilter {
  every: orderWhereInput
  none: orderWhereInput
  some: orderWhereInput
}

input orderOrderByInput {
  active: SortOrder
  created_at: SortOrder
  driver_id: SortOrder
  drop_address_id: SortOrder
  id: SortOrder
  otp: SortOrder
  pickup_address_id: SortOrder
  ref_no: SortOrder
  shipping_cost: SortOrder
  status: SortOrder
  store_id: SortOrder
  total_commission: SortOrder
  user_id: SortOrder
}

input orderScalarWhereInput {
  active: BoolNullableFilter
  AND: [orderScalarWhereInput!]
  created_at: DateTimeNullableFilter
  driver_id: StringNullableFilter
  drop_address_id: StringNullableFilter
  id: StringFilter
  NOT: [orderScalarWhereInput!]
  OR: [orderScalarWhereInput!]
  otp: StringNullableFilter
  pickup_address_id: StringNullableFilter
  ref_no: StringNullableFilter
  shipping_cost: FloatNullableFilter
  status: order_status
  store_id: StringNullableFilter
  total_commission: FloatNullableFilter
  user_id: StringNullableFilter
}

input orderUpdateInput {
  active: NullableBoolFieldUpdateOperationsInput
  address_addressToorder_drop_address_id: addressUpdateOneWithoutOrder_addressToorder_drop_address_idInput
  address_addressToorder_pickup_address_id: addressUpdateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutOrderInput
  id: StringFieldUpdateOperationsInput
  order_products: order_productsUpdateManyWithoutOrderInput
  otp: NullableStringFieldUpdateOperationsInput
  ref_no: NullableStringFieldUpdateOperationsInput
  shipping_cost: NullableFloatFieldUpdateOperationsInput
  status: order_status
  store: storeUpdateOneWithoutOrderInput
  total_commission: NullableFloatFieldUpdateOperationsInput
  transaction: transactionUpdateManyWithoutOrderInput
  user: userUpdateOneWithoutOrderInput
}

input orderUpdateManyDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  otp: NullableStringFieldUpdateOperationsInput
  ref_no: NullableStringFieldUpdateOperationsInput
  shipping_cost: NullableFloatFieldUpdateOperationsInput
  status: order_status
  total_commission: NullableFloatFieldUpdateOperationsInput
}

input orderUpdateManyMutationInput {
  active: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  otp: NullableStringFieldUpdateOperationsInput
  ref_no: NullableStringFieldUpdateOperationsInput
  shipping_cost: NullableFloatFieldUpdateOperationsInput
  status: order_status
  total_commission: NullableFloatFieldUpdateOperationsInput
}

input orderUpdateManyWithoutAddress_addressToorder_drop_address_idInput {
  connect: [orderWhereUniqueInput!]
  connectOrCreate: [orderCreateOrConnectWithoutaddressInput!]
  create: [orderCreateWithoutAddress_addressToorder_drop_address_idInput!]
  delete: [orderWhereUniqueInput!]
  deleteMany: [orderScalarWhereInput!]
  disconnect: [orderWhereUniqueInput!]
  set: [orderWhereUniqueInput!]
  update: [orderUpdateWithWhereUniqueWithoutAddress_addressToorder_drop_address_idInput!]
  updateMany: [orderUpdateManyWithWhereNestedInput!]
  upsert: [orderUpsertWithWhereUniqueWithoutAddress_addressToorder_drop_address_idInput!]
}

input orderUpdateManyWithoutAddress_addressToorder_pickup_address_idInput {
  connect: [orderWhereUniqueInput!]
  connectOrCreate: [orderCreateOrConnectWithoutaddressInput!]
  create: [orderCreateWithoutAddress_addressToorder_pickup_address_idInput!]
  delete: [orderWhereUniqueInput!]
  deleteMany: [orderScalarWhereInput!]
  disconnect: [orderWhereUniqueInput!]
  set: [orderWhereUniqueInput!]
  update: [orderUpdateWithWhereUniqueWithoutAddress_addressToorder_pickup_address_idInput!]
  updateMany: [orderUpdateManyWithWhereNestedInput!]
  upsert: [orderUpsertWithWhereUniqueWithoutAddress_addressToorder_pickup_address_idInput!]
}

input orderUpdateManyWithoutDriverInput {
  connect: [orderWhereUniqueInput!]
  connectOrCreate: [orderCreateOrConnectWithoutdriverInput!]
  create: [orderCreateWithoutDriverInput!]
  delete: [orderWhereUniqueInput!]
  deleteMany: [orderScalarWhereInput!]
  disconnect: [orderWhereUniqueInput!]
  set: [orderWhereUniqueInput!]
  update: [orderUpdateWithWhereUniqueWithoutDriverInput!]
  updateMany: [orderUpdateManyWithWhereNestedInput!]
  upsert: [orderUpsertWithWhereUniqueWithoutDriverInput!]
}

input orderUpdateManyWithoutStoreInput {
  connect: [orderWhereUniqueInput!]
  connectOrCreate: [orderCreateOrConnectWithoutstoreInput!]
  create: [orderCreateWithoutStoreInput!]
  delete: [orderWhereUniqueInput!]
  deleteMany: [orderScalarWhereInput!]
  disconnect: [orderWhereUniqueInput!]
  set: [orderWhereUniqueInput!]
  update: [orderUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [orderUpdateManyWithWhereNestedInput!]
  upsert: [orderUpsertWithWhereUniqueWithoutStoreInput!]
}

input orderUpdateManyWithoutUserInput {
  connect: [orderWhereUniqueInput!]
  connectOrCreate: [orderCreateOrConnectWithoutuserInput!]
  create: [orderCreateWithoutUserInput!]
  delete: [orderWhereUniqueInput!]
  deleteMany: [orderScalarWhereInput!]
  disconnect: [orderWhereUniqueInput!]
  set: [orderWhereUniqueInput!]
  update: [orderUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [orderUpdateManyWithWhereNestedInput!]
  upsert: [orderUpsertWithWhereUniqueWithoutUserInput!]
}

input orderUpdateManyWithWhereNestedInput {
  data: orderUpdateManyDataInput!
  where: orderScalarWhereInput!
}

input orderUpdateOneWithoutOrder_productsInput {
  connect: orderWhereUniqueInput
  connectOrCreate: orderCreateOrConnectWithoutorder_productsInput
  create: orderCreateWithoutOrder_productsInput
  delete: Boolean
  disconnect: Boolean
  update: orderUpdateWithoutOrder_productsDataInput
  upsert: orderUpsertWithoutOrder_productsInput
}

input orderUpdateOneWithoutTransactionInput {
  connect: orderWhereUniqueInput
  connectOrCreate: orderCreateOrConnectWithouttransactionInput
  create: orderCreateWithoutTransactionInput
  delete: Boolean
  disconnect: Boolean
  update: orderUpdateWithoutTransactionDataInput
  upsert: orderUpsertWithoutTransactionInput
}

input orderUpdateWithoutAddress_addressToorder_drop_address_idDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  address_addressToorder_pickup_address_id: addressUpdateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutOrderInput
  id: StringFieldUpdateOperationsInput
  order_products: order_productsUpdateManyWithoutOrderInput
  otp: NullableStringFieldUpdateOperationsInput
  ref_no: NullableStringFieldUpdateOperationsInput
  shipping_cost: NullableFloatFieldUpdateOperationsInput
  status: order_status
  store: storeUpdateOneWithoutOrderInput
  total_commission: NullableFloatFieldUpdateOperationsInput
  transaction: transactionUpdateManyWithoutOrderInput
  user: userUpdateOneWithoutOrderInput
}

input orderUpdateWithoutAddress_addressToorder_pickup_address_idDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  address_addressToorder_drop_address_id: addressUpdateOneWithoutOrder_addressToorder_drop_address_idInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutOrderInput
  id: StringFieldUpdateOperationsInput
  order_products: order_productsUpdateManyWithoutOrderInput
  otp: NullableStringFieldUpdateOperationsInput
  ref_no: NullableStringFieldUpdateOperationsInput
  shipping_cost: NullableFloatFieldUpdateOperationsInput
  status: order_status
  store: storeUpdateOneWithoutOrderInput
  total_commission: NullableFloatFieldUpdateOperationsInput
  transaction: transactionUpdateManyWithoutOrderInput
  user: userUpdateOneWithoutOrderInput
}

input orderUpdateWithoutDriverDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  address_addressToorder_drop_address_id: addressUpdateOneWithoutOrder_addressToorder_drop_address_idInput
  address_addressToorder_pickup_address_id: addressUpdateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  order_products: order_productsUpdateManyWithoutOrderInput
  otp: NullableStringFieldUpdateOperationsInput
  ref_no: NullableStringFieldUpdateOperationsInput
  shipping_cost: NullableFloatFieldUpdateOperationsInput
  status: order_status
  store: storeUpdateOneWithoutOrderInput
  total_commission: NullableFloatFieldUpdateOperationsInput
  transaction: transactionUpdateManyWithoutOrderInput
  user: userUpdateOneWithoutOrderInput
}

input orderUpdateWithoutOrder_productsDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  address_addressToorder_drop_address_id: addressUpdateOneWithoutOrder_addressToorder_drop_address_idInput
  address_addressToorder_pickup_address_id: addressUpdateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutOrderInput
  id: StringFieldUpdateOperationsInput
  otp: NullableStringFieldUpdateOperationsInput
  ref_no: NullableStringFieldUpdateOperationsInput
  shipping_cost: NullableFloatFieldUpdateOperationsInput
  status: order_status
  store: storeUpdateOneWithoutOrderInput
  total_commission: NullableFloatFieldUpdateOperationsInput
  transaction: transactionUpdateManyWithoutOrderInput
  user: userUpdateOneWithoutOrderInput
}

input orderUpdateWithoutStoreDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  address_addressToorder_drop_address_id: addressUpdateOneWithoutOrder_addressToorder_drop_address_idInput
  address_addressToorder_pickup_address_id: addressUpdateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutOrderInput
  id: StringFieldUpdateOperationsInput
  order_products: order_productsUpdateManyWithoutOrderInput
  otp: NullableStringFieldUpdateOperationsInput
  ref_no: NullableStringFieldUpdateOperationsInput
  shipping_cost: NullableFloatFieldUpdateOperationsInput
  status: order_status
  total_commission: NullableFloatFieldUpdateOperationsInput
  transaction: transactionUpdateManyWithoutOrderInput
  user: userUpdateOneWithoutOrderInput
}

input orderUpdateWithoutTransactionDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  address_addressToorder_drop_address_id: addressUpdateOneWithoutOrder_addressToorder_drop_address_idInput
  address_addressToorder_pickup_address_id: addressUpdateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutOrderInput
  id: StringFieldUpdateOperationsInput
  order_products: order_productsUpdateManyWithoutOrderInput
  otp: NullableStringFieldUpdateOperationsInput
  ref_no: NullableStringFieldUpdateOperationsInput
  shipping_cost: NullableFloatFieldUpdateOperationsInput
  status: order_status
  store: storeUpdateOneWithoutOrderInput
  total_commission: NullableFloatFieldUpdateOperationsInput
  user: userUpdateOneWithoutOrderInput
}

input orderUpdateWithoutUserDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  address_addressToorder_drop_address_id: addressUpdateOneWithoutOrder_addressToorder_drop_address_idInput
  address_addressToorder_pickup_address_id: addressUpdateOneWithoutOrder_addressToorder_pickup_address_idInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutOrderInput
  id: StringFieldUpdateOperationsInput
  order_products: order_productsUpdateManyWithoutOrderInput
  otp: NullableStringFieldUpdateOperationsInput
  ref_no: NullableStringFieldUpdateOperationsInput
  shipping_cost: NullableFloatFieldUpdateOperationsInput
  status: order_status
  store: storeUpdateOneWithoutOrderInput
  total_commission: NullableFloatFieldUpdateOperationsInput
  transaction: transactionUpdateManyWithoutOrderInput
}

input orderUpdateWithWhereUniqueWithoutAddress_addressToorder_drop_address_idInput {
  data: orderUpdateWithoutAddress_addressToorder_drop_address_idDataInput!
  where: orderWhereUniqueInput!
}

input orderUpdateWithWhereUniqueWithoutAddress_addressToorder_pickup_address_idInput {
  data: orderUpdateWithoutAddress_addressToorder_pickup_address_idDataInput!
  where: orderWhereUniqueInput!
}

input orderUpdateWithWhereUniqueWithoutDriverInput {
  data: orderUpdateWithoutDriverDataInput!
  where: orderWhereUniqueInput!
}

input orderUpdateWithWhereUniqueWithoutStoreInput {
  data: orderUpdateWithoutStoreDataInput!
  where: orderWhereUniqueInput!
}

input orderUpdateWithWhereUniqueWithoutUserInput {
  data: orderUpdateWithoutUserDataInput!
  where: orderWhereUniqueInput!
}

input orderUpsertWithoutOrder_productsInput {
  create: orderCreateWithoutOrder_productsInput!
  update: orderUpdateWithoutOrder_productsDataInput!
}

input orderUpsertWithoutTransactionInput {
  create: orderCreateWithoutTransactionInput!
  update: orderUpdateWithoutTransactionDataInput!
}

input orderUpsertWithWhereUniqueWithoutAddress_addressToorder_drop_address_idInput {
  create: orderCreateWithoutAddress_addressToorder_drop_address_idInput!
  update: orderUpdateWithoutAddress_addressToorder_drop_address_idDataInput!
  where: orderWhereUniqueInput!
}

input orderUpsertWithWhereUniqueWithoutAddress_addressToorder_pickup_address_idInput {
  create: orderCreateWithoutAddress_addressToorder_pickup_address_idInput!
  update: orderUpdateWithoutAddress_addressToorder_pickup_address_idDataInput!
  where: orderWhereUniqueInput!
}

input orderUpsertWithWhereUniqueWithoutDriverInput {
  create: orderCreateWithoutDriverInput!
  update: orderUpdateWithoutDriverDataInput!
  where: orderWhereUniqueInput!
}

input orderUpsertWithWhereUniqueWithoutStoreInput {
  create: orderCreateWithoutStoreInput!
  update: orderUpdateWithoutStoreDataInput!
  where: orderWhereUniqueInput!
}

input orderUpsertWithWhereUniqueWithoutUserInput {
  create: orderCreateWithoutUserInput!
  update: orderUpdateWithoutUserDataInput!
  where: orderWhereUniqueInput!
}

input orderWhereInput {
  active: BoolNullableFilter
  address_addressToorder_drop_address_id: addressWhereInput
  address_addressToorder_pickup_address_id: addressWhereInput
  AND: [orderWhereInput!]
  created_at: DateTimeNullableFilter
  driver: driverWhereInput
  driver_id: StringNullableFilter
  drop_address_id: StringNullableFilter
  id: StringFilter
  NOT: [orderWhereInput!]
  OR: [orderWhereInput!]
  order_products: Order_productsListRelationFilter
  otp: StringNullableFilter
  pickup_address_id: StringNullableFilter
  ref_no: StringNullableFilter
  shipping_cost: FloatNullableFilter
  status: order_status
  store: storeWhereInput
  store_id: StringNullableFilter
  total_commission: FloatNullableFilter
  transaction: TransactionListRelationFilter
  user: userWhereInput
  user_id: StringNullableFilter
}

input orderWhereUniqueInput {
  id: String
}

type OTP {
  status: String
}

type product {
  active: Boolean
  avgRating: Float!
  cost_price: Float
  created_at: DateTime
  description: String
  discounted_price: Float
  id: String!
  name: String
  offer: Boolean
  order_products(after: order_productsWhereUniqueInput, before: order_productsWhereUniqueInput, first: Int, last: Int): [order_products!]!
  product_image(after: product_imageWhereUniqueInput, before: product_imageWhereUniqueInput, first: Int, last: Int): [product_image!]!
  product_sizes(after: product_sizesWhereUniqueInput, before: product_sizesWhereUniqueInput, first: Int, last: Int): [product_sizes!]!
  rating(after: ratingWhereUniqueInput, before: ratingWhereUniqueInput, first: Int, last: Int, orderBy: [ratingOrderByInput!], where: ratingWhereInput): [rating!]!
  selling_price: Float
  store: store
  store_id: String
}

type product_image {
  created_at: DateTime
  id: String!
  image_url: String
  product: product
  product_id: String
}

input product_imageCreateInput {
  created_at: DateTime
  id: String
  image_url: String
  product: productCreateOneWithoutProduct_imageInput
}

input product_imageCreateManyWithoutProductInput {
  connect: [product_imageWhereUniqueInput!]
  connectOrCreate: [product_imageCreateOrConnectWithoutproductInput!]
  create: [product_imageCreateWithoutProductInput!]
}

input product_imageCreateOrConnectWithoutproductInput {
  create: product_imageCreateWithoutProductInput!
  where: product_imageWhereUniqueInput!
}

input product_imageCreateWithoutProductInput {
  created_at: DateTime
  id: String
  image_url: String
}

input Product_imageListRelationFilter {
  every: product_imageWhereInput
  none: product_imageWhereInput
  some: product_imageWhereInput
}

input product_imageOrderByInput {
  created_at: SortOrder
  id: SortOrder
  image_url: SortOrder
  product_id: SortOrder
}

input product_imageScalarWhereInput {
  AND: [product_imageScalarWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  image_url: StringNullableFilter
  NOT: [product_imageScalarWhereInput!]
  OR: [product_imageScalarWhereInput!]
  product_id: StringNullableFilter
}

input product_imageUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image_url: NullableStringFieldUpdateOperationsInput
  product: productUpdateOneWithoutProduct_imageInput
}

input product_imageUpdateManyDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image_url: NullableStringFieldUpdateOperationsInput
}

input product_imageUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image_url: NullableStringFieldUpdateOperationsInput
}

input product_imageUpdateManyWithoutProductInput {
  connect: [product_imageWhereUniqueInput!]
  connectOrCreate: [product_imageCreateOrConnectWithoutproductInput!]
  create: [product_imageCreateWithoutProductInput!]
  delete: [product_imageWhereUniqueInput!]
  deleteMany: [product_imageScalarWhereInput!]
  disconnect: [product_imageWhereUniqueInput!]
  set: [product_imageWhereUniqueInput!]
  update: [product_imageUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [product_imageUpdateManyWithWhereNestedInput!]
  upsert: [product_imageUpsertWithWhereUniqueWithoutProductInput!]
}

input product_imageUpdateManyWithWhereNestedInput {
  data: product_imageUpdateManyDataInput!
  where: product_imageScalarWhereInput!
}

input product_imageUpdateWithoutProductDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image_url: NullableStringFieldUpdateOperationsInput
}

input product_imageUpdateWithWhereUniqueWithoutProductInput {
  data: product_imageUpdateWithoutProductDataInput!
  where: product_imageWhereUniqueInput!
}

input product_imageUpsertWithWhereUniqueWithoutProductInput {
  create: product_imageCreateWithoutProductInput!
  update: product_imageUpdateWithoutProductDataInput!
  where: product_imageWhereUniqueInput!
}

input product_imageWhereInput {
  AND: [product_imageWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  image_url: StringNullableFilter
  NOT: [product_imageWhereInput!]
  OR: [product_imageWhereInput!]
  product: productWhereInput
  product_id: StringNullableFilter
}

input product_imageWhereUniqueInput {
  id: String
}

type product_sizes {
  created_at: DateTime
  id: String!
  product: product
  product_id: String
  size: size
  size_id: String
}

input product_sizesCreateInput {
  created_at: DateTime
  id: String
  product: productCreateOneWithoutProduct_sizesInput
  size: sizeCreateOneWithoutProduct_sizesInput
}

input product_sizesCreateManyWithoutProductInput {
  connect: [product_sizesWhereUniqueInput!]
  connectOrCreate: [product_sizesCreateOrConnectWithoutproductInput!]
  create: [product_sizesCreateWithoutProductInput!]
}

input product_sizesCreateManyWithoutSizeInput {
  connect: [product_sizesWhereUniqueInput!]
  connectOrCreate: [product_sizesCreateOrConnectWithoutsizeInput!]
  create: [product_sizesCreateWithoutSizeInput!]
}

input product_sizesCreateOrConnectWithoutproductInput {
  create: product_sizesCreateWithoutProductInput!
  where: product_sizesWhereUniqueInput!
}

input product_sizesCreateOrConnectWithoutsizeInput {
  create: product_sizesCreateWithoutSizeInput!
  where: product_sizesWhereUniqueInput!
}

input product_sizesCreateWithoutProductInput {
  created_at: DateTime
  id: String
  size: sizeCreateOneWithoutProduct_sizesInput
}

input product_sizesCreateWithoutSizeInput {
  created_at: DateTime
  id: String
  product: productCreateOneWithoutProduct_sizesInput
}

input Product_sizesListRelationFilter {
  every: product_sizesWhereInput
  none: product_sizesWhereInput
  some: product_sizesWhereInput
}

input product_sizesOrderByInput {
  created_at: SortOrder
  id: SortOrder
  product_id: SortOrder
  size_id: SortOrder
}

input product_sizesScalarWhereInput {
  AND: [product_sizesScalarWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  NOT: [product_sizesScalarWhereInput!]
  OR: [product_sizesScalarWhereInput!]
  product_id: StringNullableFilter
  size_id: StringNullableFilter
}

input product_sizesUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  product: productUpdateOneWithoutProduct_sizesInput
  size: sizeUpdateOneWithoutProduct_sizesInput
}

input product_sizesUpdateManyDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input product_sizesUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input product_sizesUpdateManyWithoutProductInput {
  connect: [product_sizesWhereUniqueInput!]
  connectOrCreate: [product_sizesCreateOrConnectWithoutproductInput!]
  create: [product_sizesCreateWithoutProductInput!]
  delete: [product_sizesWhereUniqueInput!]
  deleteMany: [product_sizesScalarWhereInput!]
  disconnect: [product_sizesWhereUniqueInput!]
  set: [product_sizesWhereUniqueInput!]
  update: [product_sizesUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [product_sizesUpdateManyWithWhereNestedInput!]
  upsert: [product_sizesUpsertWithWhereUniqueWithoutProductInput!]
}

input product_sizesUpdateManyWithoutSizeInput {
  connect: [product_sizesWhereUniqueInput!]
  connectOrCreate: [product_sizesCreateOrConnectWithoutsizeInput!]
  create: [product_sizesCreateWithoutSizeInput!]
  delete: [product_sizesWhereUniqueInput!]
  deleteMany: [product_sizesScalarWhereInput!]
  disconnect: [product_sizesWhereUniqueInput!]
  set: [product_sizesWhereUniqueInput!]
  update: [product_sizesUpdateWithWhereUniqueWithoutSizeInput!]
  updateMany: [product_sizesUpdateManyWithWhereNestedInput!]
  upsert: [product_sizesUpsertWithWhereUniqueWithoutSizeInput!]
}

input product_sizesUpdateManyWithWhereNestedInput {
  data: product_sizesUpdateManyDataInput!
  where: product_sizesScalarWhereInput!
}

input product_sizesUpdateWithoutProductDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  size: sizeUpdateOneWithoutProduct_sizesInput
}

input product_sizesUpdateWithoutSizeDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  product: productUpdateOneWithoutProduct_sizesInput
}

input product_sizesUpdateWithWhereUniqueWithoutProductInput {
  data: product_sizesUpdateWithoutProductDataInput!
  where: product_sizesWhereUniqueInput!
}

input product_sizesUpdateWithWhereUniqueWithoutSizeInput {
  data: product_sizesUpdateWithoutSizeDataInput!
  where: product_sizesWhereUniqueInput!
}

input product_sizesUpsertWithWhereUniqueWithoutProductInput {
  create: product_sizesCreateWithoutProductInput!
  update: product_sizesUpdateWithoutProductDataInput!
  where: product_sizesWhereUniqueInput!
}

input product_sizesUpsertWithWhereUniqueWithoutSizeInput {
  create: product_sizesCreateWithoutSizeInput!
  update: product_sizesUpdateWithoutSizeDataInput!
  where: product_sizesWhereUniqueInput!
}

input product_sizesWhereInput {
  AND: [product_sizesWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  NOT: [product_sizesWhereInput!]
  OR: [product_sizesWhereInput!]
  product: productWhereInput
  product_id: StringNullableFilter
  size: sizeWhereInput
  size_id: StringNullableFilter
}

input product_sizesWhereUniqueInput {
  id: String
}

input productCreateInput {
  active: Boolean
  cost_price: Float
  created_at: DateTime
  description: String
  discounted_price: Float
  id: String
  name: String
  offer: Boolean
  order_products: order_productsCreateManyWithoutProductInput
  product_image: product_imageCreateManyWithoutProductInput
  product_sizes: product_sizesCreateManyWithoutProductInput
  rating: ratingCreateManyWithoutProductInput
  selling_price: Float
  store: storeCreateOneWithoutProductInput
}

input productCreateManyWithoutStoreInput {
  connect: [productWhereUniqueInput!]
  connectOrCreate: [productCreateOrConnectWithoutstoreInput!]
  create: [productCreateWithoutStoreInput!]
}

input productCreateOneWithoutOrder_productsInput {
  connect: productWhereUniqueInput
  connectOrCreate: productCreateOrConnectWithoutorder_productsInput
  create: productCreateWithoutOrder_productsInput
}

input productCreateOneWithoutProduct_imageInput {
  connect: productWhereUniqueInput
  connectOrCreate: productCreateOrConnectWithoutproduct_imageInput
  create: productCreateWithoutProduct_imageInput
}

input productCreateOneWithoutProduct_sizesInput {
  connect: productWhereUniqueInput
  connectOrCreate: productCreateOrConnectWithoutproduct_sizesInput
  create: productCreateWithoutProduct_sizesInput
}

input productCreateOneWithoutRatingInput {
  connect: productWhereUniqueInput
  connectOrCreate: productCreateOrConnectWithoutratingInput
  create: productCreateWithoutRatingInput
}

input productCreateOrConnectWithoutorder_productsInput {
  create: productCreateWithoutOrder_productsInput!
  where: productWhereUniqueInput!
}

input productCreateOrConnectWithoutproduct_imageInput {
  create: productCreateWithoutProduct_imageInput!
  where: productWhereUniqueInput!
}

input productCreateOrConnectWithoutproduct_sizesInput {
  create: productCreateWithoutProduct_sizesInput!
  where: productWhereUniqueInput!
}

input productCreateOrConnectWithoutratingInput {
  create: productCreateWithoutRatingInput!
  where: productWhereUniqueInput!
}

input productCreateOrConnectWithoutstoreInput {
  create: productCreateWithoutStoreInput!
  where: productWhereUniqueInput!
}

input productCreateWithoutOrder_productsInput {
  active: Boolean
  cost_price: Float
  created_at: DateTime
  description: String
  discounted_price: Float
  id: String
  name: String
  offer: Boolean
  product_image: product_imageCreateManyWithoutProductInput
  product_sizes: product_sizesCreateManyWithoutProductInput
  rating: ratingCreateManyWithoutProductInput
  selling_price: Float
  store: storeCreateOneWithoutProductInput
}

input productCreateWithoutProduct_imageInput {
  active: Boolean
  cost_price: Float
  created_at: DateTime
  description: String
  discounted_price: Float
  id: String
  name: String
  offer: Boolean
  order_products: order_productsCreateManyWithoutProductInput
  product_sizes: product_sizesCreateManyWithoutProductInput
  rating: ratingCreateManyWithoutProductInput
  selling_price: Float
  store: storeCreateOneWithoutProductInput
}

input productCreateWithoutProduct_sizesInput {
  active: Boolean
  cost_price: Float
  created_at: DateTime
  description: String
  discounted_price: Float
  id: String
  name: String
  offer: Boolean
  order_products: order_productsCreateManyWithoutProductInput
  product_image: product_imageCreateManyWithoutProductInput
  rating: ratingCreateManyWithoutProductInput
  selling_price: Float
  store: storeCreateOneWithoutProductInput
}

input productCreateWithoutRatingInput {
  active: Boolean
  cost_price: Float
  created_at: DateTime
  description: String
  discounted_price: Float
  id: String
  name: String
  offer: Boolean
  order_products: order_productsCreateManyWithoutProductInput
  product_image: product_imageCreateManyWithoutProductInput
  product_sizes: product_sizesCreateManyWithoutProductInput
  selling_price: Float
  store: storeCreateOneWithoutProductInput
}

input productCreateWithoutStoreInput {
  active: Boolean
  cost_price: Float
  created_at: DateTime
  description: String
  discounted_price: Float
  id: String
  name: String
  offer: Boolean
  order_products: order_productsCreateManyWithoutProductInput
  product_image: product_imageCreateManyWithoutProductInput
  product_sizes: product_sizesCreateManyWithoutProductInput
  rating: ratingCreateManyWithoutProductInput
  selling_price: Float
}

input ProductListRelationFilter {
  every: productWhereInput
  none: productWhereInput
  some: productWhereInput
}

input productOrderByInput {
  active: SortOrder
  cost_price: SortOrder
  created_at: SortOrder
  description: SortOrder
  discounted_price: SortOrder
  id: SortOrder
  name: SortOrder
  offer: SortOrder
  selling_price: SortOrder
  store_id: SortOrder
}

input productScalarWhereInput {
  active: BoolNullableFilter
  AND: [productScalarWhereInput!]
  cost_price: FloatNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  discounted_price: FloatNullableFilter
  id: StringFilter
  name: StringNullableFilter
  NOT: [productScalarWhereInput!]
  offer: BoolNullableFilter
  OR: [productScalarWhereInput!]
  selling_price: FloatNullableFilter
  store_id: StringNullableFilter
}

input productUpdateInput {
  active: NullableBoolFieldUpdateOperationsInput
  cost_price: NullableFloatFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discounted_price: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  offer: NullableBoolFieldUpdateOperationsInput
  order_products: order_productsUpdateManyWithoutProductInput
  product_image: product_imageUpdateManyWithoutProductInput
  product_sizes: product_sizesUpdateManyWithoutProductInput
  rating: ratingUpdateManyWithoutProductInput
  selling_price: NullableFloatFieldUpdateOperationsInput
  store: storeUpdateOneWithoutProductInput
}

input productUpdateManyDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  cost_price: NullableFloatFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discounted_price: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  offer: NullableBoolFieldUpdateOperationsInput
  selling_price: NullableFloatFieldUpdateOperationsInput
}

input productUpdateManyMutationInput {
  active: NullableBoolFieldUpdateOperationsInput
  cost_price: NullableFloatFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discounted_price: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  offer: NullableBoolFieldUpdateOperationsInput
  selling_price: NullableFloatFieldUpdateOperationsInput
}

input productUpdateManyWithoutStoreInput {
  connect: [productWhereUniqueInput!]
  connectOrCreate: [productCreateOrConnectWithoutstoreInput!]
  create: [productCreateWithoutStoreInput!]
  delete: [productWhereUniqueInput!]
  deleteMany: [productScalarWhereInput!]
  disconnect: [productWhereUniqueInput!]
  set: [productWhereUniqueInput!]
  update: [productUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [productUpdateManyWithWhereNestedInput!]
  upsert: [productUpsertWithWhereUniqueWithoutStoreInput!]
}

input productUpdateManyWithWhereNestedInput {
  data: productUpdateManyDataInput!
  where: productScalarWhereInput!
}

input productUpdateOneWithoutOrder_productsInput {
  connect: productWhereUniqueInput
  connectOrCreate: productCreateOrConnectWithoutorder_productsInput
  create: productCreateWithoutOrder_productsInput
  delete: Boolean
  disconnect: Boolean
  update: productUpdateWithoutOrder_productsDataInput
  upsert: productUpsertWithoutOrder_productsInput
}

input productUpdateOneWithoutProduct_imageInput {
  connect: productWhereUniqueInput
  connectOrCreate: productCreateOrConnectWithoutproduct_imageInput
  create: productCreateWithoutProduct_imageInput
  delete: Boolean
  disconnect: Boolean
  update: productUpdateWithoutProduct_imageDataInput
  upsert: productUpsertWithoutProduct_imageInput
}

input productUpdateOneWithoutProduct_sizesInput {
  connect: productWhereUniqueInput
  connectOrCreate: productCreateOrConnectWithoutproduct_sizesInput
  create: productCreateWithoutProduct_sizesInput
  delete: Boolean
  disconnect: Boolean
  update: productUpdateWithoutProduct_sizesDataInput
  upsert: productUpsertWithoutProduct_sizesInput
}

input productUpdateOneWithoutRatingInput {
  connect: productWhereUniqueInput
  connectOrCreate: productCreateOrConnectWithoutratingInput
  create: productCreateWithoutRatingInput
  delete: Boolean
  disconnect: Boolean
  update: productUpdateWithoutRatingDataInput
  upsert: productUpsertWithoutRatingInput
}

input productUpdateWithoutOrder_productsDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  cost_price: NullableFloatFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discounted_price: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  offer: NullableBoolFieldUpdateOperationsInput
  product_image: product_imageUpdateManyWithoutProductInput
  product_sizes: product_sizesUpdateManyWithoutProductInput
  rating: ratingUpdateManyWithoutProductInput
  selling_price: NullableFloatFieldUpdateOperationsInput
  store: storeUpdateOneWithoutProductInput
}

input productUpdateWithoutProduct_imageDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  cost_price: NullableFloatFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discounted_price: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  offer: NullableBoolFieldUpdateOperationsInput
  order_products: order_productsUpdateManyWithoutProductInput
  product_sizes: product_sizesUpdateManyWithoutProductInput
  rating: ratingUpdateManyWithoutProductInput
  selling_price: NullableFloatFieldUpdateOperationsInput
  store: storeUpdateOneWithoutProductInput
}

input productUpdateWithoutProduct_sizesDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  cost_price: NullableFloatFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discounted_price: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  offer: NullableBoolFieldUpdateOperationsInput
  order_products: order_productsUpdateManyWithoutProductInput
  product_image: product_imageUpdateManyWithoutProductInput
  rating: ratingUpdateManyWithoutProductInput
  selling_price: NullableFloatFieldUpdateOperationsInput
  store: storeUpdateOneWithoutProductInput
}

input productUpdateWithoutRatingDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  cost_price: NullableFloatFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discounted_price: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  offer: NullableBoolFieldUpdateOperationsInput
  order_products: order_productsUpdateManyWithoutProductInput
  product_image: product_imageUpdateManyWithoutProductInput
  product_sizes: product_sizesUpdateManyWithoutProductInput
  selling_price: NullableFloatFieldUpdateOperationsInput
  store: storeUpdateOneWithoutProductInput
}

input productUpdateWithoutStoreDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  cost_price: NullableFloatFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discounted_price: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  offer: NullableBoolFieldUpdateOperationsInput
  order_products: order_productsUpdateManyWithoutProductInput
  product_image: product_imageUpdateManyWithoutProductInput
  product_sizes: product_sizesUpdateManyWithoutProductInput
  rating: ratingUpdateManyWithoutProductInput
  selling_price: NullableFloatFieldUpdateOperationsInput
}

input productUpdateWithWhereUniqueWithoutStoreInput {
  data: productUpdateWithoutStoreDataInput!
  where: productWhereUniqueInput!
}

input productUpsertWithoutOrder_productsInput {
  create: productCreateWithoutOrder_productsInput!
  update: productUpdateWithoutOrder_productsDataInput!
}

input productUpsertWithoutProduct_imageInput {
  create: productCreateWithoutProduct_imageInput!
  update: productUpdateWithoutProduct_imageDataInput!
}

input productUpsertWithoutProduct_sizesInput {
  create: productCreateWithoutProduct_sizesInput!
  update: productUpdateWithoutProduct_sizesDataInput!
}

input productUpsertWithoutRatingInput {
  create: productCreateWithoutRatingInput!
  update: productUpdateWithoutRatingDataInput!
}

input productUpsertWithWhereUniqueWithoutStoreInput {
  create: productCreateWithoutStoreInput!
  update: productUpdateWithoutStoreDataInput!
  where: productWhereUniqueInput!
}

input productWhereInput {
  active: BoolNullableFilter
  AND: [productWhereInput!]
  cost_price: FloatNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  discounted_price: FloatNullableFilter
  id: StringFilter
  name: StringNullableFilter
  NOT: [productWhereInput!]
  offer: BoolNullableFilter
  OR: [productWhereInput!]
  order_products: Order_productsListRelationFilter
  product_image: Product_imageListRelationFilter
  product_sizes: Product_sizesListRelationFilter
  rating: RatingListRelationFilter
  selling_price: FloatNullableFilter
  store: storeWhereInput
  store_id: StringNullableFilter
}

input productWhereUniqueInput {
  id: String
}

type Query {
  address(where: addressWhereUniqueInput!): address
  addresses(after: addressWhereUniqueInput, before: addressWhereUniqueInput, first: Int, last: Int, orderBy: [addressOrderByInput!], where: addressWhereInput): [address!]!
  bankDetail(where: bank_detailWhereUniqueInput!): bank_detail
  bankDetails(after: bank_detailWhereUniqueInput, before: bank_detailWhereUniqueInput, first: Int, last: Int, orderBy: [bank_detailOrderByInput!], where: bank_detailWhereInput): [bank_detail!]!
  driver(where: driverWhereUniqueInput!): driver
  driverDocument(where: driver_documentWhereUniqueInput!): driver_document
  driverDocuments(after: driver_documentWhereUniqueInput, before: driver_documentWhereUniqueInput, first: Int, last: Int, orderBy: [driver_documentOrderByInput!], where: driver_documentWhereInput): [driver_document!]!
  drivers(after: driverWhereUniqueInput, before: driverWhereUniqueInput, first: Int, last: Int, orderBy: [driverOrderByInput!], where: driverWhereInput): [driver!]!
  order(where: orderWhereUniqueInput!): order
  orderProducts(after: order_productsWhereUniqueInput, before: order_productsWhereUniqueInput, first: Int, last: Int, orderBy: [order_productsOrderByInput!], where: order_productsWhereInput): [order_products!]!
  orders(after: orderWhereUniqueInput, before: orderWhereUniqueInput, first: Int, last: Int, orderBy: [orderOrderByInput!], where: orderWhereInput): [order!]!
  popularStores: [store!]!
  product(where: productWhereUniqueInput!): product
  productImage(where: product_imageWhereUniqueInput!): product_image
  productImages(after: product_imageWhereUniqueInput, before: product_imageWhereUniqueInput, first: Int, last: Int, orderBy: [product_imageOrderByInput!], where: product_imageWhereInput): [product_image!]!
  products(after: productWhereUniqueInput, before: productWhereUniqueInput, first: Int, last: Int, orderBy: [productOrderByInput!], where: productWhereInput): [product!]!
  productSizes(after: product_sizesWhereUniqueInput, before: product_sizesWhereUniqueInput, first: Int, last: Int, orderBy: [product_sizesOrderByInput!], where: product_sizesWhereInput): [product_sizes!]!
  profile: user!
  rating(where: ratingWhereUniqueInput!): rating
  ratings(after: ratingWhereUniqueInput, before: ratingWhereUniqueInput, first: Int, last: Int, orderBy: [ratingOrderByInput!], where: ratingWhereInput): [rating!]!
  search(query: String, type: String): searchObj!
  size(where: sizeWhereUniqueInput!): size
  sizes(after: sizeWhereUniqueInput, before: sizeWhereUniqueInput, first: Int, last: Int, orderBy: [sizeOrderByInput!], where: sizeWhereInput): [size!]!
  store(where: storeWhereUniqueInput!): store
  storeDocument(where: store_documentWhereUniqueInput!): store_document
  storeDocuments(after: store_documentWhereUniqueInput, before: store_documentWhereUniqueInput, first: Int, last: Int, orderBy: [store_documentOrderByInput!], where: store_documentWhereInput): [store_document!]!
  stores(after: storeWhereUniqueInput, before: storeWhereUniqueInput, first: Int, last: Int, orderBy: [storeOrderByInput!], where: storeWhereInput): [store!]!
  storesWithOffers(after: storeWhereUniqueInput, before: storeWhereUniqueInput, first: Int, last: Int, orderBy: [storeOrderByInput!], where: storeWhereInput): [store!]!
  ticket(where: ticketWhereUniqueInput!): ticket
  ticketHistories(after: ticket_historyWhereUniqueInput, before: ticket_historyWhereUniqueInput, first: Int, last: Int, orderBy: [ticket_historyOrderByInput!], where: ticket_historyWhereInput): [ticket_history!]!
  ticketHistory(where: ticket_historyWhereUniqueInput!): ticket_history
  tickets(after: ticketWhereUniqueInput, before: ticketWhereUniqueInput, first: Int, last: Int, orderBy: [ticketOrderByInput!], where: ticketWhereInput): [ticket!]!
  transaction(where: transactionWhereUniqueInput!): transaction
  transactions(after: transactionWhereUniqueInput, before: transactionWhereUniqueInput, first: Int, last: Int, orderBy: [transactionOrderByInput!], where: transactionWhereInput): [transaction!]!
  user(where: userWhereUniqueInput!): user
  userAddresses(after: user_addressesWhereUniqueInput, before: user_addressesWhereUniqueInput, first: Int, last: Int, orderBy: [user_addressesOrderByInput!], where: user_addressesWhereInput): [user_addresses!]!
  users(after: userWhereUniqueInput, before: userWhereUniqueInput, first: Int, last: Int, orderBy: [userOrderByInput!], where: userWhereInput): [user!]!
}

enum QueryMode {
  default
  insensitive
}

type rating {
  created_at: DateTime
  id: String!
  product: product
  product_id: String
  rating: Float
  user: user
  user_id: String
}

input ratingCreateInput {
  created_at: DateTime
  id: String
  product: productCreateOneWithoutRatingInput
  rating: Float
}

input ratingCreateManyWithoutProductInput {
  connect: [ratingWhereUniqueInput!]
  connectOrCreate: [ratingCreateOrConnectWithoutproductInput!]
  create: [ratingCreateWithoutProductInput!]
}

input ratingCreateManyWithoutUserInput {
  connect: [ratingWhereUniqueInput!]
  connectOrCreate: [ratingCreateOrConnectWithoutuserInput!]
  create: [ratingCreateWithoutUserInput!]
}

input ratingCreateOrConnectWithoutproductInput {
  create: ratingCreateWithoutProductInput!
  where: ratingWhereUniqueInput!
}

input ratingCreateOrConnectWithoutuserInput {
  create: ratingCreateWithoutUserInput!
  where: ratingWhereUniqueInput!
}

input ratingCreateWithoutProductInput {
  created_at: DateTime
  id: String
  rating: Float
  user: userCreateOneWithoutRatingInput
}

input ratingCreateWithoutUserInput {
  created_at: DateTime
  id: String
  product: productCreateOneWithoutRatingInput
  rating: Float
}

input RatingListRelationFilter {
  every: ratingWhereInput
  none: ratingWhereInput
  some: ratingWhereInput
}

input ratingOrderByInput {
  created_at: SortOrder
  id: SortOrder
  product_id: SortOrder
  rating: SortOrder
  user_id: SortOrder
}

input ratingScalarWhereInput {
  AND: [ratingScalarWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  NOT: [ratingScalarWhereInput!]
  OR: [ratingScalarWhereInput!]
  product_id: StringNullableFilter
  rating: FloatNullableFilter
  user_id: StringNullableFilter
}

input ratingUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  product: productUpdateOneWithoutRatingInput
  rating: NullableFloatFieldUpdateOperationsInput
  user: userUpdateOneWithoutRatingInput
}

input ratingUpdateManyDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  rating: NullableFloatFieldUpdateOperationsInput
}

input ratingUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  rating: NullableFloatFieldUpdateOperationsInput
}

input ratingUpdateManyWithoutProductInput {
  connect: [ratingWhereUniqueInput!]
  connectOrCreate: [ratingCreateOrConnectWithoutproductInput!]
  create: [ratingCreateWithoutProductInput!]
  delete: [ratingWhereUniqueInput!]
  deleteMany: [ratingScalarWhereInput!]
  disconnect: [ratingWhereUniqueInput!]
  set: [ratingWhereUniqueInput!]
  update: [ratingUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [ratingUpdateManyWithWhereNestedInput!]
  upsert: [ratingUpsertWithWhereUniqueWithoutProductInput!]
}

input ratingUpdateManyWithoutUserInput {
  connect: [ratingWhereUniqueInput!]
  connectOrCreate: [ratingCreateOrConnectWithoutuserInput!]
  create: [ratingCreateWithoutUserInput!]
  delete: [ratingWhereUniqueInput!]
  deleteMany: [ratingScalarWhereInput!]
  disconnect: [ratingWhereUniqueInput!]
  set: [ratingWhereUniqueInput!]
  update: [ratingUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ratingUpdateManyWithWhereNestedInput!]
  upsert: [ratingUpsertWithWhereUniqueWithoutUserInput!]
}

input ratingUpdateManyWithWhereNestedInput {
  data: ratingUpdateManyDataInput!
  where: ratingScalarWhereInput!
}

input ratingUpdateWithoutProductDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  rating: NullableFloatFieldUpdateOperationsInput
  user: userUpdateOneWithoutRatingInput
}

input ratingUpdateWithoutUserDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  product: productUpdateOneWithoutRatingInput
  rating: NullableFloatFieldUpdateOperationsInput
}

input ratingUpdateWithWhereUniqueWithoutProductInput {
  data: ratingUpdateWithoutProductDataInput!
  where: ratingWhereUniqueInput!
}

input ratingUpdateWithWhereUniqueWithoutUserInput {
  data: ratingUpdateWithoutUserDataInput!
  where: ratingWhereUniqueInput!
}

input ratingUpsertWithWhereUniqueWithoutProductInput {
  create: ratingCreateWithoutProductInput!
  update: ratingUpdateWithoutProductDataInput!
  where: ratingWhereUniqueInput!
}

input ratingUpsertWithWhereUniqueWithoutUserInput {
  create: ratingCreateWithoutUserInput!
  update: ratingUpdateWithoutUserDataInput!
  where: ratingWhereUniqueInput!
}

input ratingWhereInput {
  AND: [ratingWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  NOT: [ratingWhereInput!]
  OR: [ratingWhereInput!]
  product: productWhereInput
  product_id: StringNullableFilter
  rating: FloatNullableFilter
  user: userWhereInput
  user_id: StringNullableFilter
}

input ratingWhereUniqueInput {
  id: String
}

type searchObj {
  result: [store!]!
}

type size {
  created_at: DateTime
  id: String!
  name: String
  product_sizes(after: product_sizesWhereUniqueInput, before: product_sizesWhereUniqueInput, first: Int, last: Int): [product_sizes!]!
}

input sizeCreateInput {
  created_at: DateTime
  id: String
  name: String
  product_sizes: product_sizesCreateManyWithoutSizeInput
}

input sizeCreateOneWithoutProduct_sizesInput {
  connect: sizeWhereUniqueInput
  connectOrCreate: sizeCreateOrConnectWithoutproduct_sizesInput
  create: sizeCreateWithoutProduct_sizesInput
}

input sizeCreateOrConnectWithoutproduct_sizesInput {
  create: sizeCreateWithoutProduct_sizesInput!
  where: sizeWhereUniqueInput!
}

input sizeCreateWithoutProduct_sizesInput {
  created_at: DateTime
  id: String
  name: String
}

input sizeOrderByInput {
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
}

input sizeUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product_sizes: product_sizesUpdateManyWithoutSizeInput
}

input sizeUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input sizeUpdateOneWithoutProduct_sizesInput {
  connect: sizeWhereUniqueInput
  connectOrCreate: sizeCreateOrConnectWithoutproduct_sizesInput
  create: sizeCreateWithoutProduct_sizesInput
  delete: Boolean
  disconnect: Boolean
  update: sizeUpdateWithoutProduct_sizesDataInput
  upsert: sizeUpsertWithoutProduct_sizesInput
}

input sizeUpdateWithoutProduct_sizesDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input sizeUpsertWithoutProduct_sizesInput {
  create: sizeCreateWithoutProduct_sizesInput!
  update: sizeUpdateWithoutProduct_sizesDataInput!
}

input sizeWhereInput {
  AND: [sizeWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  name: StringNullableFilter
  NOT: [sizeWhereInput!]
  OR: [sizeWhereInput!]
  product_sizes: Product_sizesListRelationFilter
}

input sizeWhereUniqueInput {
  id: String
  name: String
}

enum SortOrder {
  asc
  desc
}

type store {
  active: Boolean
  address: address
  address_id: String
  bank_detail(after: bank_detailWhereUniqueInput, before: bank_detailWhereUniqueInput, first: Int, last: Int): [bank_detail!]!
  created_at: DateTime
  earnings: Float!
  id: String!
  logo: String
  name: String
  order(after: orderWhereUniqueInput, before: orderWhereUniqueInput, first: Int, last: Int): [order!]!
  popularity: Int!
  product(after: productWhereUniqueInput, before: productWhereUniqueInput, first: Int, last: Int, where: productWhereInput): [product!]!
  store_document(after: store_documentWhereUniqueInput, before: store_documentWhereUniqueInput, first: Int, last: Int): [store_document!]!
  ticket(after: ticketWhereUniqueInput, before: ticketWhereUniqueInput, first: Int, last: Int): [ticket!]!
}

type store_document {
  created_at: DateTime
  id: String!
  store: store
  store_id: String
  url: String
}

input store_documentCreateInput {
  created_at: DateTime
  id: String
  store: storeCreateOneWithoutStore_documentInput
  url: String
}

input store_documentCreateManyWithoutStoreInput {
  connect: [store_documentWhereUniqueInput!]
  connectOrCreate: [store_documentCreateOrConnectWithoutstoreInput!]
  create: [store_documentCreateWithoutStoreInput!]
}

input store_documentCreateOrConnectWithoutstoreInput {
  create: store_documentCreateWithoutStoreInput!
  where: store_documentWhereUniqueInput!
}

input store_documentCreateWithoutStoreInput {
  created_at: DateTime
  id: String
  url: String
}

input Store_documentListRelationFilter {
  every: store_documentWhereInput
  none: store_documentWhereInput
  some: store_documentWhereInput
}

input store_documentOrderByInput {
  created_at: SortOrder
  id: SortOrder
  store_id: SortOrder
  url: SortOrder
}

input store_documentScalarWhereInput {
  AND: [store_documentScalarWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  NOT: [store_documentScalarWhereInput!]
  OR: [store_documentScalarWhereInput!]
  store_id: StringNullableFilter
  url: StringNullableFilter
}

input store_documentUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  store: storeUpdateOneWithoutStore_documentInput
  url: NullableStringFieldUpdateOperationsInput
}

input store_documentUpdateManyDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input store_documentUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input store_documentUpdateManyWithoutStoreInput {
  connect: [store_documentWhereUniqueInput!]
  connectOrCreate: [store_documentCreateOrConnectWithoutstoreInput!]
  create: [store_documentCreateWithoutStoreInput!]
  delete: [store_documentWhereUniqueInput!]
  deleteMany: [store_documentScalarWhereInput!]
  disconnect: [store_documentWhereUniqueInput!]
  set: [store_documentWhereUniqueInput!]
  update: [store_documentUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [store_documentUpdateManyWithWhereNestedInput!]
  upsert: [store_documentUpsertWithWhereUniqueWithoutStoreInput!]
}

input store_documentUpdateManyWithWhereNestedInput {
  data: store_documentUpdateManyDataInput!
  where: store_documentScalarWhereInput!
}

input store_documentUpdateWithoutStoreDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input store_documentUpdateWithWhereUniqueWithoutStoreInput {
  data: store_documentUpdateWithoutStoreDataInput!
  where: store_documentWhereUniqueInput!
}

input store_documentUpsertWithWhereUniqueWithoutStoreInput {
  create: store_documentCreateWithoutStoreInput!
  update: store_documentUpdateWithoutStoreDataInput!
  where: store_documentWhereUniqueInput!
}

input store_documentWhereInput {
  AND: [store_documentWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  NOT: [store_documentWhereInput!]
  OR: [store_documentWhereInput!]
  store: storeWhereInput
  store_id: StringNullableFilter
  url: StringNullableFilter
}

input store_documentWhereUniqueInput {
  id: String
}

input storeCreateInput {
  active: Boolean
  address: addressCreateOneWithoutStoreInput
  bank_detail: bank_detailCreateManyWithoutStoreInput
  created_at: DateTime
  id: String
  logo: String
  name: String
  order: orderCreateManyWithoutStoreInput
  product: productCreateManyWithoutStoreInput
  store_document: store_documentCreateManyWithoutStoreInput
  ticket: ticketCreateManyWithoutStoreInput
}

input storeCreateManyWithoutAddressInput {
  connect: [storeWhereUniqueInput!]
  connectOrCreate: [storeCreateOrConnectWithoutaddressInput!]
  create: [storeCreateWithoutAddressInput!]
}

input storeCreateOneWithoutBank_detailInput {
  connect: storeWhereUniqueInput
  connectOrCreate: storeCreateOrConnectWithoutbank_detailInput
  create: storeCreateWithoutBank_detailInput
}

input storeCreateOneWithoutOrderInput {
  connect: storeWhereUniqueInput
  connectOrCreate: storeCreateOrConnectWithoutorderInput
  create: storeCreateWithoutOrderInput
}

input storeCreateOneWithoutProductInput {
  connect: storeWhereUniqueInput
  connectOrCreate: storeCreateOrConnectWithoutproductInput
  create: storeCreateWithoutProductInput
}

input storeCreateOneWithoutStore_documentInput {
  connect: storeWhereUniqueInput
  connectOrCreate: storeCreateOrConnectWithoutstore_documentInput
  create: storeCreateWithoutStore_documentInput
}

input storeCreateOneWithoutTicketInput {
  connect: storeWhereUniqueInput
  connectOrCreate: storeCreateOrConnectWithoutticketInput
  create: storeCreateWithoutTicketInput
}

input storeCreateOrConnectWithoutaddressInput {
  create: storeCreateWithoutAddressInput!
  where: storeWhereUniqueInput!
}

input storeCreateOrConnectWithoutbank_detailInput {
  create: storeCreateWithoutBank_detailInput!
  where: storeWhereUniqueInput!
}

input storeCreateOrConnectWithoutorderInput {
  create: storeCreateWithoutOrderInput!
  where: storeWhereUniqueInput!
}

input storeCreateOrConnectWithoutproductInput {
  create: storeCreateWithoutProductInput!
  where: storeWhereUniqueInput!
}

input storeCreateOrConnectWithoutstore_documentInput {
  create: storeCreateWithoutStore_documentInput!
  where: storeWhereUniqueInput!
}

input storeCreateOrConnectWithoutticketInput {
  create: storeCreateWithoutTicketInput!
  where: storeWhereUniqueInput!
}

input storeCreateWithoutAddressInput {
  active: Boolean
  bank_detail: bank_detailCreateManyWithoutStoreInput
  created_at: DateTime
  id: String
  logo: String
  name: String
  order: orderCreateManyWithoutStoreInput
  product: productCreateManyWithoutStoreInput
  store_document: store_documentCreateManyWithoutStoreInput
  ticket: ticketCreateManyWithoutStoreInput
}

input storeCreateWithoutBank_detailInput {
  active: Boolean
  address: addressCreateOneWithoutStoreInput
  created_at: DateTime
  id: String
  logo: String
  name: String
  order: orderCreateManyWithoutStoreInput
  product: productCreateManyWithoutStoreInput
  store_document: store_documentCreateManyWithoutStoreInput
  ticket: ticketCreateManyWithoutStoreInput
}

input storeCreateWithoutOrderInput {
  active: Boolean
  address: addressCreateOneWithoutStoreInput
  bank_detail: bank_detailCreateManyWithoutStoreInput
  created_at: DateTime
  id: String
  logo: String
  name: String
  product: productCreateManyWithoutStoreInput
  store_document: store_documentCreateManyWithoutStoreInput
  ticket: ticketCreateManyWithoutStoreInput
}

input storeCreateWithoutProductInput {
  active: Boolean
  address: addressCreateOneWithoutStoreInput
  bank_detail: bank_detailCreateManyWithoutStoreInput
  created_at: DateTime
  id: String
  logo: String
  name: String
  order: orderCreateManyWithoutStoreInput
  store_document: store_documentCreateManyWithoutStoreInput
  ticket: ticketCreateManyWithoutStoreInput
}

input storeCreateWithoutStore_documentInput {
  active: Boolean
  address: addressCreateOneWithoutStoreInput
  bank_detail: bank_detailCreateManyWithoutStoreInput
  created_at: DateTime
  id: String
  logo: String
  name: String
  order: orderCreateManyWithoutStoreInput
  product: productCreateManyWithoutStoreInput
  ticket: ticketCreateManyWithoutStoreInput
}

input storeCreateWithoutTicketInput {
  active: Boolean
  address: addressCreateOneWithoutStoreInput
  bank_detail: bank_detailCreateManyWithoutStoreInput
  created_at: DateTime
  id: String
  logo: String
  name: String
  order: orderCreateManyWithoutStoreInput
  product: productCreateManyWithoutStoreInput
  store_document: store_documentCreateManyWithoutStoreInput
}

input StoreListRelationFilter {
  every: storeWhereInput
  none: storeWhereInput
  some: storeWhereInput
}

input storeOrderByInput {
  active: SortOrder
  address_id: SortOrder
  created_at: SortOrder
  id: SortOrder
  logo: SortOrder
  name: SortOrder
}

input storeScalarWhereInput {
  active: BoolNullableFilter
  address_id: StringNullableFilter
  AND: [storeScalarWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  logo: StringNullableFilter
  name: StringNullableFilter
  NOT: [storeScalarWhereInput!]
  OR: [storeScalarWhereInput!]
}

input storeUpdateInput {
  active: NullableBoolFieldUpdateOperationsInput
  address: addressUpdateOneWithoutStoreInput
  bank_detail: bank_detailUpdateManyWithoutStoreInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order: orderUpdateManyWithoutStoreInput
  product: productUpdateManyWithoutStoreInput
  store_document: store_documentUpdateManyWithoutStoreInput
  ticket: ticketUpdateManyWithoutStoreInput
}

input storeUpdateManyDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input storeUpdateManyMutationInput {
  active: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input storeUpdateManyWithoutAddressInput {
  connect: [storeWhereUniqueInput!]
  connectOrCreate: [storeCreateOrConnectWithoutaddressInput!]
  create: [storeCreateWithoutAddressInput!]
  delete: [storeWhereUniqueInput!]
  deleteMany: [storeScalarWhereInput!]
  disconnect: [storeWhereUniqueInput!]
  set: [storeWhereUniqueInput!]
  update: [storeUpdateWithWhereUniqueWithoutAddressInput!]
  updateMany: [storeUpdateManyWithWhereNestedInput!]
  upsert: [storeUpsertWithWhereUniqueWithoutAddressInput!]
}

input storeUpdateManyWithWhereNestedInput {
  data: storeUpdateManyDataInput!
  where: storeScalarWhereInput!
}

input storeUpdateOneWithoutBank_detailInput {
  connect: storeWhereUniqueInput
  connectOrCreate: storeCreateOrConnectWithoutbank_detailInput
  create: storeCreateWithoutBank_detailInput
  delete: Boolean
  disconnect: Boolean
  update: storeUpdateWithoutBank_detailDataInput
  upsert: storeUpsertWithoutBank_detailInput
}

input storeUpdateOneWithoutOrderInput {
  connect: storeWhereUniqueInput
  connectOrCreate: storeCreateOrConnectWithoutorderInput
  create: storeCreateWithoutOrderInput
  delete: Boolean
  disconnect: Boolean
  update: storeUpdateWithoutOrderDataInput
  upsert: storeUpsertWithoutOrderInput
}

input storeUpdateOneWithoutProductInput {
  connect: storeWhereUniqueInput
  connectOrCreate: storeCreateOrConnectWithoutproductInput
  create: storeCreateWithoutProductInput
  delete: Boolean
  disconnect: Boolean
  update: storeUpdateWithoutProductDataInput
  upsert: storeUpsertWithoutProductInput
}

input storeUpdateOneWithoutStore_documentInput {
  connect: storeWhereUniqueInput
  connectOrCreate: storeCreateOrConnectWithoutstore_documentInput
  create: storeCreateWithoutStore_documentInput
  delete: Boolean
  disconnect: Boolean
  update: storeUpdateWithoutStore_documentDataInput
  upsert: storeUpsertWithoutStore_documentInput
}

input storeUpdateOneWithoutTicketInput {
  connect: storeWhereUniqueInput
  connectOrCreate: storeCreateOrConnectWithoutticketInput
  create: storeCreateWithoutTicketInput
  delete: Boolean
  disconnect: Boolean
  update: storeUpdateWithoutTicketDataInput
  upsert: storeUpsertWithoutTicketInput
}

input storeUpdateWithoutAddressDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  bank_detail: bank_detailUpdateManyWithoutStoreInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order: orderUpdateManyWithoutStoreInput
  product: productUpdateManyWithoutStoreInput
  store_document: store_documentUpdateManyWithoutStoreInput
  ticket: ticketUpdateManyWithoutStoreInput
}

input storeUpdateWithoutBank_detailDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  address: addressUpdateOneWithoutStoreInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order: orderUpdateManyWithoutStoreInput
  product: productUpdateManyWithoutStoreInput
  store_document: store_documentUpdateManyWithoutStoreInput
  ticket: ticketUpdateManyWithoutStoreInput
}

input storeUpdateWithoutOrderDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  address: addressUpdateOneWithoutStoreInput
  bank_detail: bank_detailUpdateManyWithoutStoreInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product: productUpdateManyWithoutStoreInput
  store_document: store_documentUpdateManyWithoutStoreInput
  ticket: ticketUpdateManyWithoutStoreInput
}

input storeUpdateWithoutProductDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  address: addressUpdateOneWithoutStoreInput
  bank_detail: bank_detailUpdateManyWithoutStoreInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order: orderUpdateManyWithoutStoreInput
  store_document: store_documentUpdateManyWithoutStoreInput
  ticket: ticketUpdateManyWithoutStoreInput
}

input storeUpdateWithoutStore_documentDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  address: addressUpdateOneWithoutStoreInput
  bank_detail: bank_detailUpdateManyWithoutStoreInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order: orderUpdateManyWithoutStoreInput
  product: productUpdateManyWithoutStoreInput
  ticket: ticketUpdateManyWithoutStoreInput
}

input storeUpdateWithoutTicketDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  address: addressUpdateOneWithoutStoreInput
  bank_detail: bank_detailUpdateManyWithoutStoreInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order: orderUpdateManyWithoutStoreInput
  product: productUpdateManyWithoutStoreInput
  store_document: store_documentUpdateManyWithoutStoreInput
}

input storeUpdateWithWhereUniqueWithoutAddressInput {
  data: storeUpdateWithoutAddressDataInput!
  where: storeWhereUniqueInput!
}

input storeUpsertWithoutBank_detailInput {
  create: storeCreateWithoutBank_detailInput!
  update: storeUpdateWithoutBank_detailDataInput!
}

input storeUpsertWithoutOrderInput {
  create: storeCreateWithoutOrderInput!
  update: storeUpdateWithoutOrderDataInput!
}

input storeUpsertWithoutProductInput {
  create: storeCreateWithoutProductInput!
  update: storeUpdateWithoutProductDataInput!
}

input storeUpsertWithoutStore_documentInput {
  create: storeCreateWithoutStore_documentInput!
  update: storeUpdateWithoutStore_documentDataInput!
}

input storeUpsertWithoutTicketInput {
  create: storeCreateWithoutTicketInput!
  update: storeUpdateWithoutTicketDataInput!
}

input storeUpsertWithWhereUniqueWithoutAddressInput {
  create: storeCreateWithoutAddressInput!
  update: storeUpdateWithoutAddressDataInput!
  where: storeWhereUniqueInput!
}

input storeWhereInput {
  active: BoolNullableFilter
  address: addressWhereInput
  address_id: StringNullableFilter
  AND: [storeWhereInput!]
  bank_detail: Bank_detailListRelationFilter
  created_at: DateTimeNullableFilter
  id: StringFilter
  logo: StringNullableFilter
  name: StringNullableFilter
  NOT: [storeWhereInput!]
  OR: [storeWhereInput!]
  order: OrderListRelationFilter
  product: ProductListRelationFilter
  store_document: Store_documentListRelationFilter
  ticket: TicketListRelationFilter
}

input storeWhereUniqueInput {
  id: String
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type ticket {
  created_at: DateTime
  description: String!
  driver: driver
  driver_id: String
  from: String!
  id: String!
  open: Boolean
  store: store
  store_id: String
  subject: String
  ticket_history(after: ticket_historyWhereUniqueInput, before: ticket_historyWhereUniqueInput, first: Int, last: Int): [ticket_history!]!
  type: ticket_types
  updatedAt: DateTime!
  user: user
  user_id: String
}

type ticket_history {
  admin: Boolean
  created_at: DateTime
  id: String!
  message: String
  ticket: ticket
  ticket_id: String
}

input ticket_historyCreateInput {
  admin: Boolean
  created_at: DateTime
  id: String
  message: String
  ticket: ticketCreateOneWithoutTicket_historyInput
}

input ticket_historyCreateManyWithoutTicketInput {
  connect: [ticket_historyWhereUniqueInput!]
  connectOrCreate: [ticket_historyCreateOrConnectWithoutticketInput!]
  create: [ticket_historyCreateWithoutTicketInput!]
}

input ticket_historyCreateOrConnectWithoutticketInput {
  create: ticket_historyCreateWithoutTicketInput!
  where: ticket_historyWhereUniqueInput!
}

input ticket_historyCreateWithoutTicketInput {
  admin: Boolean
  created_at: DateTime
  id: String
  message: String
}

input Ticket_historyListRelationFilter {
  every: ticket_historyWhereInput
  none: ticket_historyWhereInput
  some: ticket_historyWhereInput
}

input ticket_historyOrderByInput {
  admin: SortOrder
  created_at: SortOrder
  id: SortOrder
  message: SortOrder
  ticket_id: SortOrder
}

input ticket_historyScalarWhereInput {
  admin: BoolNullableFilter
  AND: [ticket_historyScalarWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  message: StringNullableFilter
  NOT: [ticket_historyScalarWhereInput!]
  OR: [ticket_historyScalarWhereInput!]
  ticket_id: StringNullableFilter
}

input ticket_historyUpdateInput {
  admin: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  message: NullableStringFieldUpdateOperationsInput
  ticket: ticketUpdateOneWithoutTicket_historyInput
}

input ticket_historyUpdateManyDataInput {
  admin: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  message: NullableStringFieldUpdateOperationsInput
}

input ticket_historyUpdateManyMutationInput {
  admin: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  message: NullableStringFieldUpdateOperationsInput
}

input ticket_historyUpdateManyWithoutTicketInput {
  connect: [ticket_historyWhereUniqueInput!]
  connectOrCreate: [ticket_historyCreateOrConnectWithoutticketInput!]
  create: [ticket_historyCreateWithoutTicketInput!]
  delete: [ticket_historyWhereUniqueInput!]
  deleteMany: [ticket_historyScalarWhereInput!]
  disconnect: [ticket_historyWhereUniqueInput!]
  set: [ticket_historyWhereUniqueInput!]
  update: [ticket_historyUpdateWithWhereUniqueWithoutTicketInput!]
  updateMany: [ticket_historyUpdateManyWithWhereNestedInput!]
  upsert: [ticket_historyUpsertWithWhereUniqueWithoutTicketInput!]
}

input ticket_historyUpdateManyWithWhereNestedInput {
  data: ticket_historyUpdateManyDataInput!
  where: ticket_historyScalarWhereInput!
}

input ticket_historyUpdateWithoutTicketDataInput {
  admin: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  message: NullableStringFieldUpdateOperationsInput
}

input ticket_historyUpdateWithWhereUniqueWithoutTicketInput {
  data: ticket_historyUpdateWithoutTicketDataInput!
  where: ticket_historyWhereUniqueInput!
}

input ticket_historyUpsertWithWhereUniqueWithoutTicketInput {
  create: ticket_historyCreateWithoutTicketInput!
  update: ticket_historyUpdateWithoutTicketDataInput!
  where: ticket_historyWhereUniqueInput!
}

input ticket_historyWhereInput {
  admin: BoolNullableFilter
  AND: [ticket_historyWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  message: StringNullableFilter
  NOT: [ticket_historyWhereInput!]
  OR: [ticket_historyWhereInput!]
  ticket: ticketWhereInput
  ticket_id: StringNullableFilter
}

input ticket_historyWhereUniqueInput {
  id: String
}

enum ticket_types {
  driver
  store
  user
}

input ticketCreateInput {
  created_at: DateTime
  driver: driverCreateOneWithoutTicketInput
  id: String
  name: String
  open: Boolean
  store: storeCreateOneWithoutTicketInput
  ticket_history: ticket_historyCreateManyWithoutTicketInput
  type: ticket_types
}

input ticketCreateManyWithoutDriverInput {
  connect: [ticketWhereUniqueInput!]
  connectOrCreate: [ticketCreateOrConnectWithoutdriverInput!]
  create: [ticketCreateWithoutDriverInput!]
}

input ticketCreateManyWithoutStoreInput {
  connect: [ticketWhereUniqueInput!]
  connectOrCreate: [ticketCreateOrConnectWithoutstoreInput!]
  create: [ticketCreateWithoutStoreInput!]
}

input ticketCreateManyWithoutUserInput {
  connect: [ticketWhereUniqueInput!]
  connectOrCreate: [ticketCreateOrConnectWithoutuserInput!]
  create: [ticketCreateWithoutUserInput!]
}

input ticketCreateOneWithoutTicket_historyInput {
  connect: ticketWhereUniqueInput
  connectOrCreate: ticketCreateOrConnectWithoutticket_historyInput
  create: ticketCreateWithoutTicket_historyInput
}

input ticketCreateOrConnectWithoutdriverInput {
  create: ticketCreateWithoutDriverInput!
  where: ticketWhereUniqueInput!
}

input ticketCreateOrConnectWithoutstoreInput {
  create: ticketCreateWithoutStoreInput!
  where: ticketWhereUniqueInput!
}

input ticketCreateOrConnectWithoutticket_historyInput {
  create: ticketCreateWithoutTicket_historyInput!
  where: ticketWhereUniqueInput!
}

input ticketCreateOrConnectWithoutuserInput {
  create: ticketCreateWithoutUserInput!
  where: ticketWhereUniqueInput!
}

input ticketCreateWithoutDriverInput {
  created_at: DateTime
  id: String
  name: String
  open: Boolean
  store: storeCreateOneWithoutTicketInput
  ticket_history: ticket_historyCreateManyWithoutTicketInput
  type: ticket_types
  user: userCreateOneWithoutTicketInput
}

input ticketCreateWithoutStoreInput {
  created_at: DateTime
  driver: driverCreateOneWithoutTicketInput
  id: String
  name: String
  open: Boolean
  ticket_history: ticket_historyCreateManyWithoutTicketInput
  type: ticket_types
  user: userCreateOneWithoutTicketInput
}

input ticketCreateWithoutTicket_historyInput {
  created_at: DateTime
  driver: driverCreateOneWithoutTicketInput
  id: String
  name: String
  open: Boolean
  store: storeCreateOneWithoutTicketInput
  type: ticket_types
  user: userCreateOneWithoutTicketInput
}

input ticketCreateWithoutUserInput {
  created_at: DateTime
  driver: driverCreateOneWithoutTicketInput
  id: String
  name: String
  open: Boolean
  store: storeCreateOneWithoutTicketInput
  ticket_history: ticket_historyCreateManyWithoutTicketInput
  type: ticket_types
}

input TicketListRelationFilter {
  every: ticketWhereInput
  none: ticketWhereInput
  some: ticketWhereInput
}

input ticketOrderByInput {
  created_at: SortOrder
  driver_id: SortOrder
  id: SortOrder
  name: SortOrder
  open: SortOrder
  store_id: SortOrder
  type: SortOrder
  user_id: SortOrder
}

input ticketScalarWhereInput {
  AND: [ticketScalarWhereInput!]
  created_at: DateTimeNullableFilter
  driver_id: StringNullableFilter
  id: StringFilter
  name: StringNullableFilter
  NOT: [ticketScalarWhereInput!]
  open: BoolNullableFilter
  OR: [ticketScalarWhereInput!]
  store_id: StringNullableFilter
  type: ticket_types
  user_id: StringNullableFilter
}

input ticketUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutTicketInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  open: NullableBoolFieldUpdateOperationsInput
  store: storeUpdateOneWithoutTicketInput
  ticket_history: ticket_historyUpdateManyWithoutTicketInput
  type: ticket_types
  user: userUpdateOneWithoutTicketInput
}

input ticketUpdateManyDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  open: NullableBoolFieldUpdateOperationsInput
  type: ticket_types
}

input ticketUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  open: NullableBoolFieldUpdateOperationsInput
  type: ticket_types
}

input ticketUpdateManyWithoutDriverInput {
  connect: [ticketWhereUniqueInput!]
  connectOrCreate: [ticketCreateOrConnectWithoutdriverInput!]
  create: [ticketCreateWithoutDriverInput!]
  delete: [ticketWhereUniqueInput!]
  deleteMany: [ticketScalarWhereInput!]
  disconnect: [ticketWhereUniqueInput!]
  set: [ticketWhereUniqueInput!]
  update: [ticketUpdateWithWhereUniqueWithoutDriverInput!]
  updateMany: [ticketUpdateManyWithWhereNestedInput!]
  upsert: [ticketUpsertWithWhereUniqueWithoutDriverInput!]
}

input ticketUpdateManyWithoutStoreInput {
  connect: [ticketWhereUniqueInput!]
  connectOrCreate: [ticketCreateOrConnectWithoutstoreInput!]
  create: [ticketCreateWithoutStoreInput!]
  delete: [ticketWhereUniqueInput!]
  deleteMany: [ticketScalarWhereInput!]
  disconnect: [ticketWhereUniqueInput!]
  set: [ticketWhereUniqueInput!]
  update: [ticketUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [ticketUpdateManyWithWhereNestedInput!]
  upsert: [ticketUpsertWithWhereUniqueWithoutStoreInput!]
}

input ticketUpdateManyWithoutUserInput {
  connect: [ticketWhereUniqueInput!]
  connectOrCreate: [ticketCreateOrConnectWithoutuserInput!]
  create: [ticketCreateWithoutUserInput!]
  delete: [ticketWhereUniqueInput!]
  deleteMany: [ticketScalarWhereInput!]
  disconnect: [ticketWhereUniqueInput!]
  set: [ticketWhereUniqueInput!]
  update: [ticketUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ticketUpdateManyWithWhereNestedInput!]
  upsert: [ticketUpsertWithWhereUniqueWithoutUserInput!]
}

input ticketUpdateManyWithWhereNestedInput {
  data: ticketUpdateManyDataInput!
  where: ticketScalarWhereInput!
}

input ticketUpdateOneWithoutTicket_historyInput {
  connect: ticketWhereUniqueInput
  connectOrCreate: ticketCreateOrConnectWithoutticket_historyInput
  create: ticketCreateWithoutTicket_historyInput
  delete: Boolean
  disconnect: Boolean
  update: ticketUpdateWithoutTicket_historyDataInput
  upsert: ticketUpsertWithoutTicket_historyInput
}

input ticketUpdateWithoutDriverDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  open: NullableBoolFieldUpdateOperationsInput
  store: storeUpdateOneWithoutTicketInput
  ticket_history: ticket_historyUpdateManyWithoutTicketInput
  type: ticket_types
  user: userUpdateOneWithoutTicketInput
}

input ticketUpdateWithoutStoreDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutTicketInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  open: NullableBoolFieldUpdateOperationsInput
  ticket_history: ticket_historyUpdateManyWithoutTicketInput
  type: ticket_types
  user: userUpdateOneWithoutTicketInput
}

input ticketUpdateWithoutTicket_historyDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutTicketInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  open: NullableBoolFieldUpdateOperationsInput
  store: storeUpdateOneWithoutTicketInput
  type: ticket_types
  user: userUpdateOneWithoutTicketInput
}

input ticketUpdateWithoutUserDataInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  driver: driverUpdateOneWithoutTicketInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  open: NullableBoolFieldUpdateOperationsInput
  store: storeUpdateOneWithoutTicketInput
  ticket_history: ticket_historyUpdateManyWithoutTicketInput
  type: ticket_types
}

input ticketUpdateWithWhereUniqueWithoutDriverInput {
  data: ticketUpdateWithoutDriverDataInput!
  where: ticketWhereUniqueInput!
}

input ticketUpdateWithWhereUniqueWithoutStoreInput {
  data: ticketUpdateWithoutStoreDataInput!
  where: ticketWhereUniqueInput!
}

input ticketUpdateWithWhereUniqueWithoutUserInput {
  data: ticketUpdateWithoutUserDataInput!
  where: ticketWhereUniqueInput!
}

input ticketUpsertWithoutTicket_historyInput {
  create: ticketCreateWithoutTicket_historyInput!
  update: ticketUpdateWithoutTicket_historyDataInput!
}

input ticketUpsertWithWhereUniqueWithoutDriverInput {
  create: ticketCreateWithoutDriverInput!
  update: ticketUpdateWithoutDriverDataInput!
  where: ticketWhereUniqueInput!
}

input ticketUpsertWithWhereUniqueWithoutStoreInput {
  create: ticketCreateWithoutStoreInput!
  update: ticketUpdateWithoutStoreDataInput!
  where: ticketWhereUniqueInput!
}

input ticketUpsertWithWhereUniqueWithoutUserInput {
  create: ticketCreateWithoutUserInput!
  update: ticketUpdateWithoutUserDataInput!
  where: ticketWhereUniqueInput!
}

input ticketWhereInput {
  AND: [ticketWhereInput!]
  created_at: DateTimeNullableFilter
  driver: driverWhereInput
  driver_id: StringNullableFilter
  id: StringFilter
  name: StringNullableFilter
  NOT: [ticketWhereInput!]
  open: BoolNullableFilter
  OR: [ticketWhereInput!]
  store: storeWhereInput
  store_id: StringNullableFilter
  ticket_history: Ticket_historyListRelationFilter
  type: ticket_types
  user: userWhereInput
  user_id: StringNullableFilter
}

input ticketWhereUniqueInput {
  id: String
}

type transaction {
  amount: Float
  created_at: DateTime
  id: String!
  order: order
  order_id: String
  tax: Float
  user: user
  user_id: String
}

input transactionCreateInput {
  amount: Float
  created_at: DateTime
  id: String
  order: orderCreateOneWithoutTransactionInput
  tax: Float
  user: userCreateOneWithoutTransactionInput
}

input transactionCreateManyWithoutOrderInput {
  connect: [transactionWhereUniqueInput!]
  connectOrCreate: [transactionCreateOrConnectWithoutorderInput!]
  create: [transactionCreateWithoutOrderInput!]
}

input transactionCreateManyWithoutUserInput {
  connect: [transactionWhereUniqueInput!]
  connectOrCreate: [transactionCreateOrConnectWithoutuserInput!]
  create: [transactionCreateWithoutUserInput!]
}

input transactionCreateOrConnectWithoutorderInput {
  create: transactionCreateWithoutOrderInput!
  where: transactionWhereUniqueInput!
}

input transactionCreateOrConnectWithoutuserInput {
  create: transactionCreateWithoutUserInput!
  where: transactionWhereUniqueInput!
}

input transactionCreateWithoutOrderInput {
  amount: Float
  created_at: DateTime
  id: String
  tax: Float
  user: userCreateOneWithoutTransactionInput
}

input transactionCreateWithoutUserInput {
  amount: Float
  created_at: DateTime
  id: String
  order: orderCreateOneWithoutTransactionInput
  tax: Float
}

input TransactionListRelationFilter {
  every: transactionWhereInput
  none: transactionWhereInput
  some: transactionWhereInput
}

input transactionOrderByInput {
  amount: SortOrder
  created_at: SortOrder
  id: SortOrder
  order_id: SortOrder
  tax: SortOrder
  user_id: SortOrder
}

input transactionScalarWhereInput {
  amount: FloatNullableFilter
  AND: [transactionScalarWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  NOT: [transactionScalarWhereInput!]
  OR: [transactionScalarWhereInput!]
  order_id: StringNullableFilter
  tax: FloatNullableFilter
  user_id: StringNullableFilter
}

input transactionUpdateInput {
  amount: NullableFloatFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  order: orderUpdateOneWithoutTransactionInput
  tax: NullableFloatFieldUpdateOperationsInput
  user: userUpdateOneWithoutTransactionInput
}

input transactionUpdateManyDataInput {
  amount: NullableFloatFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  tax: NullableFloatFieldUpdateOperationsInput
}

input transactionUpdateManyMutationInput {
  amount: NullableFloatFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  tax: NullableFloatFieldUpdateOperationsInput
}

input transactionUpdateManyWithoutOrderInput {
  connect: [transactionWhereUniqueInput!]
  connectOrCreate: [transactionCreateOrConnectWithoutorderInput!]
  create: [transactionCreateWithoutOrderInput!]
  delete: [transactionWhereUniqueInput!]
  deleteMany: [transactionScalarWhereInput!]
  disconnect: [transactionWhereUniqueInput!]
  set: [transactionWhereUniqueInput!]
  update: [transactionUpdateWithWhereUniqueWithoutOrderInput!]
  updateMany: [transactionUpdateManyWithWhereNestedInput!]
  upsert: [transactionUpsertWithWhereUniqueWithoutOrderInput!]
}

input transactionUpdateManyWithoutUserInput {
  connect: [transactionWhereUniqueInput!]
  connectOrCreate: [transactionCreateOrConnectWithoutuserInput!]
  create: [transactionCreateWithoutUserInput!]
  delete: [transactionWhereUniqueInput!]
  deleteMany: [transactionScalarWhereInput!]
  disconnect: [transactionWhereUniqueInput!]
  set: [transactionWhereUniqueInput!]
  update: [transactionUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [transactionUpdateManyWithWhereNestedInput!]
  upsert: [transactionUpsertWithWhereUniqueWithoutUserInput!]
}

input transactionUpdateManyWithWhereNestedInput {
  data: transactionUpdateManyDataInput!
  where: transactionScalarWhereInput!
}

input transactionUpdateWithoutOrderDataInput {
  amount: NullableFloatFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  tax: NullableFloatFieldUpdateOperationsInput
  user: userUpdateOneWithoutTransactionInput
}

input transactionUpdateWithoutUserDataInput {
  amount: NullableFloatFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  order: orderUpdateOneWithoutTransactionInput
  tax: NullableFloatFieldUpdateOperationsInput
}

input transactionUpdateWithWhereUniqueWithoutOrderInput {
  data: transactionUpdateWithoutOrderDataInput!
  where: transactionWhereUniqueInput!
}

input transactionUpdateWithWhereUniqueWithoutUserInput {
  data: transactionUpdateWithoutUserDataInput!
  where: transactionWhereUniqueInput!
}

input transactionUpsertWithWhereUniqueWithoutOrderInput {
  create: transactionCreateWithoutOrderInput!
  update: transactionUpdateWithoutOrderDataInput!
  where: transactionWhereUniqueInput!
}

input transactionUpsertWithWhereUniqueWithoutUserInput {
  create: transactionCreateWithoutUserInput!
  update: transactionUpdateWithoutUserDataInput!
  where: transactionWhereUniqueInput!
}

input transactionWhereInput {
  amount: FloatNullableFilter
  AND: [transactionWhereInput!]
  created_at: DateTimeNullableFilter
  id: StringFilter
  NOT: [transactionWhereInput!]
  OR: [transactionWhereInput!]
  order: orderWhereInput
  order_id: StringNullableFilter
  tax: FloatNullableFilter
  user: userWhereInput
  user_id: StringNullableFilter
}

input transactionWhereUniqueInput {
  id: String
}

"""desc"""
scalar Upload

type user {
  active: Boolean
  id: String!
  mobile: Float
  name: String
  order(after: orderWhereUniqueInput, before: orderWhereUniqueInput, first: Int, last: Int): [order!]!
  orderCount: Int!
  rating(after: ratingWhereUniqueInput, before: ratingWhereUniqueInput, first: Int, last: Int): [rating!]!
  spendings: Float!
  ticket(after: ticketWhereUniqueInput, before: ticketWhereUniqueInput, first: Int, last: Int, orderBy: [ticketOrderByInput!], where: ticketWhereInput): [ticket!]!
  transaction(after: transactionWhereUniqueInput, before: transactionWhereUniqueInput, first: Int, last: Int): [transaction!]!
  user_addresses(after: user_addressesWhereUniqueInput, before: user_addressesWhereUniqueInput, first: Int, last: Int): [user_addresses!]!
}

type user_addresses {
  address: address
  address_id: String
  id: String!
  user: user
  user_id: String
}

input user_addressesCreateInput {
  address: addressCreateOneWithoutUser_addressesInput
  id: String
  user: userCreateOneWithoutUser_addressesInput
}

input user_addressesCreateManyWithoutAddressInput {
  connect: [user_addressesWhereUniqueInput!]
  connectOrCreate: [user_addressesCreateOrConnectWithoutaddressInput!]
  create: [user_addressesCreateWithoutAddressInput!]
}

input user_addressesCreateManyWithoutUserInput {
  connect: [user_addressesWhereUniqueInput!]
  connectOrCreate: [user_addressesCreateOrConnectWithoutuserInput!]
  create: [user_addressesCreateWithoutUserInput!]
}

input user_addressesCreateOrConnectWithoutaddressInput {
  create: user_addressesCreateWithoutAddressInput!
  where: user_addressesWhereUniqueInput!
}

input user_addressesCreateOrConnectWithoutuserInput {
  create: user_addressesCreateWithoutUserInput!
  where: user_addressesWhereUniqueInput!
}

input user_addressesCreateWithoutAddressInput {
  id: String
  user: userCreateOneWithoutUser_addressesInput
}

input user_addressesCreateWithoutUserInput {
  address: addressCreateOneWithoutUser_addressesInput
  id: String
}

input User_addressesListRelationFilter {
  every: user_addressesWhereInput
  none: user_addressesWhereInput
  some: user_addressesWhereInput
}

input user_addressesOrderByInput {
  address_id: SortOrder
  id: SortOrder
  user_id: SortOrder
}

input user_addressesScalarWhereInput {
  address_id: StringNullableFilter
  AND: [user_addressesScalarWhereInput!]
  id: StringFilter
  NOT: [user_addressesScalarWhereInput!]
  OR: [user_addressesScalarWhereInput!]
  user_id: StringNullableFilter
}

input user_addressesUpdateInput {
  address: addressUpdateOneWithoutUser_addressesInput
  id: StringFieldUpdateOperationsInput
  user: userUpdateOneWithoutUser_addressesInput
}

input user_addressesUpdateManyDataInput {
  id: StringFieldUpdateOperationsInput
}

input user_addressesUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input user_addressesUpdateManyWithoutAddressInput {
  connect: [user_addressesWhereUniqueInput!]
  connectOrCreate: [user_addressesCreateOrConnectWithoutaddressInput!]
  create: [user_addressesCreateWithoutAddressInput!]
  delete: [user_addressesWhereUniqueInput!]
  deleteMany: [user_addressesScalarWhereInput!]
  disconnect: [user_addressesWhereUniqueInput!]
  set: [user_addressesWhereUniqueInput!]
  update: [user_addressesUpdateWithWhereUniqueWithoutAddressInput!]
  updateMany: [user_addressesUpdateManyWithWhereNestedInput!]
  upsert: [user_addressesUpsertWithWhereUniqueWithoutAddressInput!]
}

input user_addressesUpdateManyWithoutUserInput {
  connect: [user_addressesWhereUniqueInput!]
  connectOrCreate: [user_addressesCreateOrConnectWithoutuserInput!]
  create: [user_addressesCreateWithoutUserInput!]
  delete: [user_addressesWhereUniqueInput!]
  deleteMany: [user_addressesScalarWhereInput!]
  disconnect: [user_addressesWhereUniqueInput!]
  set: [user_addressesWhereUniqueInput!]
  update: [user_addressesUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [user_addressesUpdateManyWithWhereNestedInput!]
  upsert: [user_addressesUpsertWithWhereUniqueWithoutUserInput!]
}

input user_addressesUpdateManyWithWhereNestedInput {
  data: user_addressesUpdateManyDataInput!
  where: user_addressesScalarWhereInput!
}

input user_addressesUpdateWithoutAddressDataInput {
  id: StringFieldUpdateOperationsInput
  user: userUpdateOneWithoutUser_addressesInput
}

input user_addressesUpdateWithoutUserDataInput {
  address: addressUpdateOneWithoutUser_addressesInput
  id: StringFieldUpdateOperationsInput
}

input user_addressesUpdateWithWhereUniqueWithoutAddressInput {
  data: user_addressesUpdateWithoutAddressDataInput!
  where: user_addressesWhereUniqueInput!
}

input user_addressesUpdateWithWhereUniqueWithoutUserInput {
  data: user_addressesUpdateWithoutUserDataInput!
  where: user_addressesWhereUniqueInput!
}

input user_addressesUpsertWithWhereUniqueWithoutAddressInput {
  create: user_addressesCreateWithoutAddressInput!
  update: user_addressesUpdateWithoutAddressDataInput!
  where: user_addressesWhereUniqueInput!
}

input user_addressesUpsertWithWhereUniqueWithoutUserInput {
  create: user_addressesCreateWithoutUserInput!
  update: user_addressesUpdateWithoutUserDataInput!
  where: user_addressesWhereUniqueInput!
}

input user_addressesWhereInput {
  address: addressWhereInput
  address_id: StringNullableFilter
  AND: [user_addressesWhereInput!]
  id: StringFilter
  NOT: [user_addressesWhereInput!]
  OR: [user_addressesWhereInput!]
  user: userWhereInput
  user_id: StringNullableFilter
}

input user_addressesWhereUniqueInput {
  id: String
}

input userCreateInput {
  id: String
  mobile: Float
  name: String
  order: orderCreateManyWithoutUserInput
  rating: ratingCreateManyWithoutUserInput
  ticket: ticketCreateManyWithoutUserInput
  transaction: transactionCreateManyWithoutUserInput
  user_addresses: user_addressesCreateManyWithoutUserInput
}

input userCreateOneWithoutOrderInput {
  connect: userWhereUniqueInput
  connectOrCreate: userCreateOrConnectWithoutorderInput
  create: userCreateWithoutOrderInput
}

input userCreateOneWithoutRatingInput {
  connect: userWhereUniqueInput
  connectOrCreate: userCreateOrConnectWithoutratingInput
  create: userCreateWithoutRatingInput
}

input userCreateOneWithoutTicketInput {
  connect: userWhereUniqueInput
  connectOrCreate: userCreateOrConnectWithoutticketInput
  create: userCreateWithoutTicketInput
}

input userCreateOneWithoutTransactionInput {
  connect: userWhereUniqueInput
  connectOrCreate: userCreateOrConnectWithouttransactionInput
  create: userCreateWithoutTransactionInput
}

input userCreateOneWithoutUser_addressesInput {
  connect: userWhereUniqueInput
  connectOrCreate: userCreateOrConnectWithoutuser_addressesInput
  create: userCreateWithoutUser_addressesInput
}

input userCreateOrConnectWithoutorderInput {
  create: userCreateWithoutOrderInput!
  where: userWhereUniqueInput!
}

input userCreateOrConnectWithoutratingInput {
  create: userCreateWithoutRatingInput!
  where: userWhereUniqueInput!
}

input userCreateOrConnectWithoutticketInput {
  create: userCreateWithoutTicketInput!
  where: userWhereUniqueInput!
}

input userCreateOrConnectWithouttransactionInput {
  create: userCreateWithoutTransactionInput!
  where: userWhereUniqueInput!
}

input userCreateOrConnectWithoutuser_addressesInput {
  create: userCreateWithoutUser_addressesInput!
  where: userWhereUniqueInput!
}

input userCreateWithoutOrderInput {
  active: Boolean
  id: String
  mobile: Float
  name: String
  rating: ratingCreateManyWithoutUserInput
  ticket: ticketCreateManyWithoutUserInput
  transaction: transactionCreateManyWithoutUserInput
  user_addresses: user_addressesCreateManyWithoutUserInput
}

input userCreateWithoutRatingInput {
  active: Boolean
  id: String
  mobile: Float
  name: String
  order: orderCreateManyWithoutUserInput
  ticket: ticketCreateManyWithoutUserInput
  transaction: transactionCreateManyWithoutUserInput
  user_addresses: user_addressesCreateManyWithoutUserInput
}

input userCreateWithoutTicketInput {
  active: Boolean
  id: String
  mobile: Float
  name: String
  order: orderCreateManyWithoutUserInput
  rating: ratingCreateManyWithoutUserInput
  transaction: transactionCreateManyWithoutUserInput
  user_addresses: user_addressesCreateManyWithoutUserInput
}

input userCreateWithoutTransactionInput {
  active: Boolean
  id: String
  mobile: Float
  name: String
  order: orderCreateManyWithoutUserInput
  rating: ratingCreateManyWithoutUserInput
  ticket: ticketCreateManyWithoutUserInput
  user_addresses: user_addressesCreateManyWithoutUserInput
}

input userCreateWithoutUser_addressesInput {
  active: Boolean
  id: String
  mobile: Float
  name: String
  order: orderCreateManyWithoutUserInput
  rating: ratingCreateManyWithoutUserInput
  ticket: ticketCreateManyWithoutUserInput
  transaction: transactionCreateManyWithoutUserInput
}

input userOrderByInput {
  active: SortOrder
  id: SortOrder
  mobile: SortOrder
  name: SortOrder
}

input userUpdateInput {
  active: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order: orderUpdateManyWithoutUserInput
  rating: ratingUpdateManyWithoutUserInput
  ticket: ticketUpdateManyWithoutUserInput
  transaction: transactionUpdateManyWithoutUserInput
  user_addresses: user_addressesUpdateManyWithoutUserInput
}

input userUpdateManyMutationInput {
  active: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input userUpdateOneWithoutOrderInput {
  connect: userWhereUniqueInput
  connectOrCreate: userCreateOrConnectWithoutorderInput
  create: userCreateWithoutOrderInput
  delete: Boolean
  disconnect: Boolean
  update: userUpdateWithoutOrderDataInput
  upsert: userUpsertWithoutOrderInput
}

input userUpdateOneWithoutRatingInput {
  connect: userWhereUniqueInput
  connectOrCreate: userCreateOrConnectWithoutratingInput
  create: userCreateWithoutRatingInput
  delete: Boolean
  disconnect: Boolean
  update: userUpdateWithoutRatingDataInput
  upsert: userUpsertWithoutRatingInput
}

input userUpdateOneWithoutTicketInput {
  connect: userWhereUniqueInput
  connectOrCreate: userCreateOrConnectWithoutticketInput
  create: userCreateWithoutTicketInput
  delete: Boolean
  disconnect: Boolean
  update: userUpdateWithoutTicketDataInput
  upsert: userUpsertWithoutTicketInput
}

input userUpdateOneWithoutTransactionInput {
  connect: userWhereUniqueInput
  connectOrCreate: userCreateOrConnectWithouttransactionInput
  create: userCreateWithoutTransactionInput
  delete: Boolean
  disconnect: Boolean
  update: userUpdateWithoutTransactionDataInput
  upsert: userUpsertWithoutTransactionInput
}

input userUpdateOneWithoutUser_addressesInput {
  connect: userWhereUniqueInput
  connectOrCreate: userCreateOrConnectWithoutuser_addressesInput
  create: userCreateWithoutUser_addressesInput
  delete: Boolean
  disconnect: Boolean
  update: userUpdateWithoutUser_addressesDataInput
  upsert: userUpsertWithoutUser_addressesInput
}

input userUpdateWithoutOrderDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  rating: ratingUpdateManyWithoutUserInput
  ticket: ticketUpdateManyWithoutUserInput
  transaction: transactionUpdateManyWithoutUserInput
  user_addresses: user_addressesUpdateManyWithoutUserInput
}

input userUpdateWithoutRatingDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order: orderUpdateManyWithoutUserInput
  ticket: ticketUpdateManyWithoutUserInput
  transaction: transactionUpdateManyWithoutUserInput
  user_addresses: user_addressesUpdateManyWithoutUserInput
}

input userUpdateWithoutTicketDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order: orderUpdateManyWithoutUserInput
  rating: ratingUpdateManyWithoutUserInput
  transaction: transactionUpdateManyWithoutUserInput
  user_addresses: user_addressesUpdateManyWithoutUserInput
}

input userUpdateWithoutTransactionDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order: orderUpdateManyWithoutUserInput
  rating: ratingUpdateManyWithoutUserInput
  ticket: ticketUpdateManyWithoutUserInput
  user_addresses: user_addressesUpdateManyWithoutUserInput
}

input userUpdateWithoutUser_addressesDataInput {
  active: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mobile: NullableFloatFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  order: orderUpdateManyWithoutUserInput
  rating: ratingUpdateManyWithoutUserInput
  ticket: ticketUpdateManyWithoutUserInput
  transaction: transactionUpdateManyWithoutUserInput
}

input userUpsertWithoutOrderInput {
  create: userCreateWithoutOrderInput!
  update: userUpdateWithoutOrderDataInput!
}

input userUpsertWithoutRatingInput {
  create: userCreateWithoutRatingInput!
  update: userUpdateWithoutRatingDataInput!
}

input userUpsertWithoutTicketInput {
  create: userCreateWithoutTicketInput!
  update: userUpdateWithoutTicketDataInput!
}

input userUpsertWithoutTransactionInput {
  create: userCreateWithoutTransactionInput!
  update: userUpdateWithoutTransactionDataInput!
}

input userUpsertWithoutUser_addressesInput {
  create: userCreateWithoutUser_addressesInput!
  update: userUpdateWithoutUser_addressesDataInput!
}

input userWhereInput {
  active: BoolNullableFilter
  AND: [userWhereInput!]
  id: StringFilter
  mobile: FloatNullableFilter
  name: StringNullableFilter
  NOT: [userWhereInput!]
  OR: [userWhereInput!]
  order: OrderListRelationFilter
  rating: RatingListRelationFilter
  ticket: TicketListRelationFilter
  transaction: TransactionListRelationFilter
  user_addresses: User_addressesListRelationFilter
}

input userWhereUniqueInput {
  id: String
  mobile: Float
}
